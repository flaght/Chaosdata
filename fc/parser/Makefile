# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.

LIB_DIR = ./../../../library/mylib

# Where to find user code.
USER_DIR = $(LIB_DIR)/base

THIRD_PATH = $(LIB_DIR)/public

CUSTOM_THIRD_PATH = $(LIB_DIR)/third_party

LINK_PATHS = -L./ -L/usr/local/libmemcached-1.0.7/lib/  -L/usr/lib64/mysql

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem -D_DEBUG -DDEBUG-DUSR_LOG_ERROR -DUSR_LOG_MSG

# Flags passed to the C++ compiler.
CXXFLAGS += -g  -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
APP = fc_parser


USER_HEADERS =  /usr/include/mysql/*.h \
				/usr/local/freetds/include/*.h \
				$(THIRD_PATH)/*/*.h \
                $(USER_DIR)/*/*.h \
                $(CUSTOM_THIRD_PATH)/hiredis/*.h \

INCLUDE_PATHS = -I/usr/local/libmemcached-1.0.7/include \
				-I$(THIRD_PATH)\
				-I ../ \
				-I/usr/local/include\
				-I/usr/include/mysql\
				-I$(USER_DIR)\
				-I$(CUSTOM_THIRD_PATH)/hiredis\
				-I$(CUSTOM_THIRD_PATH)/librdkafka/src\
				-I$(CUSTOM_THIRD_PATH)\


# House-keeping build targets.

ALL_HEADERS = $(USER_HEADERS)
all : $(APP)

clean :
	rm -f $(APP) *.o


# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

main.o : ./main.cc $(ALL_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./main.cc $(INCLUDE_PATHS)

flw_his_stk.o : ./flw_his_stk.cc $(ALL_HEADERS)
		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./flw_his_stk.cc $(INCLUDE_PATHS)

flw_his_data.o : ./flw_his_data.cc $(ALL_HEADERS)
		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./flw_his_data.cc $(INCLUDE_PATHS)

flw_his_file.o : ./flw_his_file.cc $(ALL_HEADERS)
		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./flw_his_file.cc $(INCLUDE_PATHS)

stk_datacps.o : ./stk_datacps.cc $(ALL_HEADERS)
		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stk_datacps.cc $(INCLUDE_PATHS)

mword.o : ./mword.cc $(ALL_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./mword.cc $(INCLUDE_PATHS)

symbol_dynam_market.pb.o : ./../proto/symbol_dynam_market.pb.cc $(ALL_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./../proto/symbol_dynam_market.pb.cc $(INCLUDE_PATHS)

symbol_static.pb.o : ./../proto/symbol_static.pb.cc $(ALL_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./../proto/symbol_static.pb.cc $(INCLUDE_PATHS)

symbol_his_iopv.pb.o : ./../proto/symbol_his_iopv.pb.cc $(ALL_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./../proto/symbol_his_iopv.pb.cc $(INCLUDE_PATHS)

symbol_his_matu_yld.pb.o : ./../proto/symbol_his_matu_yld.pb.cc $(ALL_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./../proto/symbol_his_matu_yld.pb.cc $(INCLUDE_PATHS)

symbol_l2_mmpex.pb.o : ./../proto/symbol_l2_mmpex.pb.cc $(ALL_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./../proto/symbol_l2_mmpex.pb.cc $(INCLUDE_PATHS)

symbol_l2_order_state.pb.o : ./../proto/symbol_l2_order_state.pb.cc $(ALL_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./../proto/symbol_l2_order_state.pb.cc $(INCLUDE_PATHS)

symbol_l2_report.pb.o : ./../proto/symbol_l2_report.pb.cc $(ALL_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./../proto/symbol_l2_report.pb.cc $(INCLUDE_PATHS)

fc_parser : flw_his_data.o flw_his_stk.o flw_his_file.o mword.o stk_datacps.o main.o\
		symbol_dynam_market.pb.o symbol_static.pb.o symbol_his_iopv.pb.o symbol_his_matu_yld.pb.o\
		symbol_l2_mmpex.pb.o symbol_l2_order_state.pb.o symbol_l2_report.pb.o\
		/usr/local/lib/thostmduserapi.so $(LIB_DIR)/base/lib/mybase.a $(LIB_DIR)/third_party/lib/libhiredis.a $(LIB_DIR)/third_party/lib/librdkafka.a /usr/local/lib/lib/libiconv.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LINK_PATHS) -lpthread -lprotobuf -lexpat -lrt -ldl -lmysqlclient \
	$^ -o $@
