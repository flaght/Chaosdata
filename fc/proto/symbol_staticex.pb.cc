// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: symbol_staticex.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "symbol_staticex.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace chaos_data {
class SymbolStaticEx_EquityMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolStaticEx_EquityMessage>
     _instance;
} _SymbolStaticEx_EquityMessage_default_instance_;
class SymbolStaticEx_FundMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolStaticEx_FundMessage>
     _instance;
} _SymbolStaticEx_FundMessage_default_instance_;
class SymbolStaticEx_WarranMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolStaticEx_WarranMessage>
     _instance;
} _SymbolStaticEx_WarranMessage_default_instance_;
class SymbolStaticEx_BoundMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolStaticEx_BoundMessage>
     _instance;
} _SymbolStaticEx_BoundMessage_default_instance_;
class SymbolStaticEx_CNVTMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolStaticEx_CNVTMessage>
     _instance;
} _SymbolStaticEx_CNVTMessage_default_instance_;
class SymbolStaticEx_FutureMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolStaticEx_FutureMessage>
     _instance;
} _SymbolStaticEx_FutureMessage_default_instance_;
class SymbolStaticEx_TruestMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolStaticEx_TruestMessage>
     _instance;
} _SymbolStaticEx_TruestMessage_default_instance_;
class SymbolStaticEx_SpecMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolStaticEx_SpecMessage>
     _instance;
} _SymbolStaticEx_SpecMessage_default_instance_;
class SymbolStaticExDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolStaticEx>
     _instance;
} _SymbolStaticEx_default_instance_;

namespace protobuf_symbol_5fstaticex_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_EquityMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_EquityMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_EquityMessage, face_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_EquityMessage, total_issued_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_EquityMessage, industry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_EquityMessage, trade_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_EquityMessage, cash_dividend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_EquityMessage, security_properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_EquityMessage, last_tradedate_),
  0,
  1,
  2,
  3,
  4,
  6,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_FundMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_FundMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_FundMessage, face_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_FundMessage, total_issued_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_FundMessage, iopv_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_WarranMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_WarranMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_WarranMessage, style_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_WarranMessage, cp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_WarranMessage, cnvt_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_WarranMessage, strike_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_WarranMessage, maturity_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_WarranMessage, under_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_WarranMessage, balance_),
  1,
  2,
  3,
  4,
  5,
  0,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_BoundMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_BoundMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_BoundMessage, maturity_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_BoundMessage, intaccru_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_BoundMessage, isssue_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_BoundMessage, coupon_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_BoundMessage, face_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_BoundMessage, accrued_int_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_CNVTMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_CNVTMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_CNVTMessage, style_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_CNVTMessage, cp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_CNVTMessage, cnvt_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_CNVTMessage, strike_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_CNVTMessage, maturity_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_CNVTMessage, under_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_CNVTMessage, accrued_int_),
  1,
  2,
  3,
  4,
  5,
  0,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_FutureMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_FutureMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_FutureMessage, last_day_oi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_FutureMessage, last_settle_price_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_TruestMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_TruestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_TruestMessage, asset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_TruestMessage, asset_date_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_SpecMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_SpecMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_SpecMessage, equity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_SpecMessage, fund_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_SpecMessage, warran_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_SpecMessage, bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_SpecMessage, cnvt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_SpecMessage, future_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx_SpecMessage, truest_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx, ctype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx, csub_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolStaticEx, spec_),
  1,
  2,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(SymbolStaticEx_EquityMessage)},
  { 19, 27, sizeof(SymbolStaticEx_FundMessage)},
  { 30, 42, sizeof(SymbolStaticEx_WarranMessage)},
  { 49, 60, sizeof(SymbolStaticEx_BoundMessage)},
  { 66, 78, sizeof(SymbolStaticEx_CNVTMessage)},
  { 85, 92, sizeof(SymbolStaticEx_FutureMessage)},
  { 94, 101, sizeof(SymbolStaticEx_TruestMessage)},
  { 103, 115, sizeof(SymbolStaticEx_SpecMessage)},
  { 122, 130, sizeof(SymbolStaticEx)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolStaticEx_EquityMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolStaticEx_FundMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolStaticEx_WarranMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolStaticEx_BoundMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolStaticEx_CNVTMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolStaticEx_FutureMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolStaticEx_TruestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolStaticEx_SpecMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolStaticEx_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "symbol_staticex.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SymbolStaticEx_EquityMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolStaticEx_EquityMessage_default_instance_);_SymbolStaticEx_FundMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolStaticEx_FundMessage_default_instance_);_SymbolStaticEx_WarranMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolStaticEx_WarranMessage_default_instance_);_SymbolStaticEx_BoundMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolStaticEx_BoundMessage_default_instance_);_SymbolStaticEx_CNVTMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolStaticEx_CNVTMessage_default_instance_);_SymbolStaticEx_FutureMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolStaticEx_FutureMessage_default_instance_);_SymbolStaticEx_TruestMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolStaticEx_TruestMessage_default_instance_);_SymbolStaticEx_SpecMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolStaticEx_SpecMessage_default_instance_);_SymbolStaticEx_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolStaticEx_default_instance_);_SymbolStaticEx_SpecMessage_default_instance_._instance.get_mutable()->equity_ = const_cast< ::chaos_data::SymbolStaticEx_EquityMessage*>(
      ::chaos_data::SymbolStaticEx_EquityMessage::internal_default_instance());
  _SymbolStaticEx_SpecMessage_default_instance_._instance.get_mutable()->fund_ = const_cast< ::chaos_data::SymbolStaticEx_FundMessage*>(
      ::chaos_data::SymbolStaticEx_FundMessage::internal_default_instance());
  _SymbolStaticEx_SpecMessage_default_instance_._instance.get_mutable()->warran_ = const_cast< ::chaos_data::SymbolStaticEx_WarranMessage*>(
      ::chaos_data::SymbolStaticEx_WarranMessage::internal_default_instance());
  _SymbolStaticEx_SpecMessage_default_instance_._instance.get_mutable()->bound_ = const_cast< ::chaos_data::SymbolStaticEx_BoundMessage*>(
      ::chaos_data::SymbolStaticEx_BoundMessage::internal_default_instance());
  _SymbolStaticEx_SpecMessage_default_instance_._instance.get_mutable()->cnvt_ = const_cast< ::chaos_data::SymbolStaticEx_CNVTMessage*>(
      ::chaos_data::SymbolStaticEx_CNVTMessage::internal_default_instance());
  _SymbolStaticEx_SpecMessage_default_instance_._instance.get_mutable()->future_ = const_cast< ::chaos_data::SymbolStaticEx_FutureMessage*>(
      ::chaos_data::SymbolStaticEx_FutureMessage::internal_default_instance());
  _SymbolStaticEx_SpecMessage_default_instance_._instance.get_mutable()->truest_ = const_cast< ::chaos_data::SymbolStaticEx_TruestMessage*>(
      ::chaos_data::SymbolStaticEx_TruestMessage::internal_default_instance());
  _SymbolStaticEx_default_instance_._instance.get_mutable()->spec_ = const_cast< ::chaos_data::SymbolStaticEx_SpecMessage*>(
      ::chaos_data::SymbolStaticEx_SpecMessage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025symbol_staticex.proto\022\nchaos_data\"\302\016\n\016"
      "SymbolStaticEx\0225\n\005ctype\030\001 \001(\0162&.chaos_da"
      "ta.SymbolStaticEx.SYMBOL_TYPE\022<\n\tcsub_ty"
      "pe\030\002 \001(\0162).chaos_data.SymbolStaticEx.SYM"
      "BOL_SUBTYPE\0224\n\004spec\030\003 \001(\0132&.chaos_data.S"
      "ymbolStaticEx.SpecMessage\032\323\001\n\rEquityMess"
      "age\022\022\n\nface_value\030\001 \001(\002\022\024\n\014total_issued\030"
      "\002 \001(\002\022\020\n\010industry\030\003 \001(\r\022\024\n\014trade_status\030"
      "\004 \001(\005\022\025\n\rcash_dividend\030\005 \001(\002\022A\n\023security"
      "_properties\030\006 \001(\0162$.chaos_data.SymbolSta"
      "ticEx.SYMBOL_SP\022\026\n\016last_tradedate\030\007 \001(\r\032"
      "E\n\013FundMessage\022\022\n\nface_value\030\001 \001(\002\022\024\n\014to"
      "tal_issued\030\002 \001(\002\022\014\n\004iopv\030\003 \001(\002\032\220\001\n\rWarra"
      "nMessage\022\r\n\005style\030\001 \001(\005\022\n\n\002cp\030\002 \001(\005\022\022\n\nc"
      "nvt_ratio\030\003 \001(\002\022\024\n\014strike_price\030\004 \001(\002\022\025\n"
      "\rmaturity_date\030\005 \001(\r\022\022\n\nunder_line\030\006 \001(\014"
      "\022\017\n\007balance\030\007 \001(\002\032\220\001\n\014BoundMessage\022\025\n\rma"
      "turity_date\030\001 \001(\r\022\025\n\rintaccru_date\030\002 \001(\r"
      "\022\024\n\014isssue_price\030\003 \001(\002\022\023\n\013coupon_rate\030\004 "
      "\001(\002\022\022\n\nface_value\030\005 \001(\002\022\023\n\013accrued_int\030\006"
      " \001(\002\032\222\001\n\013CNVTMessage\022\r\n\005style\030\001 \001(\005\022\n\n\002c"
      "p\030\002 \001(\005\022\022\n\ncnvt_ratio\030\003 \001(\002\022\024\n\014strike_pr"
      "ice\030\004 \001(\002\022\025\n\rmaturity_date\030\005 \001(\r\022\022\n\nunde"
      "r_line\030\006 \001(\014\022\023\n\013accrued_int\030\007 \001(\002\032\?\n\rFut"
      "ureMessage\022\023\n\013last_day_OI\030\001 \001(\r\022\031\n\021last_"
      "settle_price\030\002 \001(\002\0322\n\rTruestMessage\022\r\n\005a"
      "sset\030\003 \001(\002\022\022\n\nasset_date\030\004 \001(\r\032\231\003\n\013SpecM"
      "essage\0228\n\006equity\030\001 \001(\0132(.chaos_data.Symb"
      "olStaticEx.EquityMessage\0224\n\004fund\030\002 \001(\0132&"
      ".chaos_data.SymbolStaticEx.FundMessage\0228"
      "\n\006warran\030\003 \001(\0132(.chaos_data.SymbolStatic"
      "Ex.WarranMessage\0226\n\005bound\030\004 \001(\0132\'.chaos_"
      "data.SymbolStaticEx.BoundMessage\0224\n\004cnvt"
      "\030\005 \001(\0132&.chaos_data.SymbolStaticEx.CNVTM"
      "essage\0228\n\006future\030\006 \001(\0132(.chaos_data.Symb"
      "olStaticEx.FutureMessage\0228\n\006truest\030\007 \001(\013"
      "2(.chaos_data.SymbolStaticEx.TruestMessa"
      "ge\"_\n\016SYMBOL_SUBTYPE\022\013\n\007NILTYPE\020\001\022\n\n\006ASH"
      "ARE\020\002\022\n\n\006BSHARE\020\003\022\014\n\010GOV_BOND\020\004\022\014\n\010ENT_B"
      "OND\020\005\022\014\n\010FIN_BOND\020\006\"h\n\tSYMBOL_SP\022\n\n\006NULL"
      "SP\020\001\022\007\n\003NSP\020\002\022\007\n\003SSP\020\003\022\007\n\003PSP\020\004\022\007\n\003TSP\020\005"
      "\022\007\n\003LSP\020\006\022\007\n\003OSP\020\007\022\007\n\003FSP\020\010\022\007\n\003ESP\020\t\022\007\n\003"
      "ZSP\020\n\"\320\001\n\013SYMBOL_TYPE\022\t\n\005INDEX\020\000\022\t\n\005STOC"
      "K\020\001\022\010\n\004FUND\020\002\022\010\n\004BOND\020\003\022\017\n\013OTHER_STOCK\020\004"
      "\022\n\n\006OPTION\020\005\022\014\n\010EXCHANGE\020\006\022\n\n\006FUTURE\020\007\022\013"
      "\n\007FTR_IDX\020\010\022\007\n\003RGZ\020\t\022\007\n\003ETF\020\n\022\007\n\003LOF\020\013\022\014"
      "\n\010COV_BOND\020\014\022\t\n\005TRUST\020\r\022\013\n\007WARRANT\020\016\022\010\n\004"
      "REPO\020\017\022\010\n\004COMM\020\020"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1896);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "symbol_staticex.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_symbol_5fstaticex_2eproto

const ::google::protobuf::EnumDescriptor* SymbolStaticEx_SYMBOL_SUBTYPE_descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_enum_descriptors[0];
}
bool SymbolStaticEx_SYMBOL_SUBTYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::NILTYPE;
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::ASHARE;
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::BSHARE;
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::GOV_BOND;
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::ENT_BOND;
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::FIN_BOND;
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::SYMBOL_SUBTYPE_MIN;
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::SYMBOL_SUBTYPE_MAX;
const int SymbolStaticEx::SYMBOL_SUBTYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SymbolStaticEx_SYMBOL_SP_descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_enum_descriptors[1];
}
bool SymbolStaticEx_SYMBOL_SP_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::NULLSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::NSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::SSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::PSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::TSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::LSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::OSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::FSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::ESP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::ZSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::SYMBOL_SP_MIN;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx::SYMBOL_SP_MAX;
const int SymbolStaticEx::SYMBOL_SP_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SymbolStaticEx_SYMBOL_TYPE_descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_enum_descriptors[2];
}
bool SymbolStaticEx_SYMBOL_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::INDEX;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::STOCK;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::FUND;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::BOND;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::OTHER_STOCK;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::OPTION;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::EXCHANGE;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::FUTURE;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::FTR_IDX;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::RGZ;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::ETF;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::LOF;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::COV_BOND;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::TRUST;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::WARRANT;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::REPO;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::COMM;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::SYMBOL_TYPE_MIN;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::SYMBOL_TYPE_MAX;
const int SymbolStaticEx::SYMBOL_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolStaticEx_EquityMessage::kFaceValueFieldNumber;
const int SymbolStaticEx_EquityMessage::kTotalIssuedFieldNumber;
const int SymbolStaticEx_EquityMessage::kIndustryFieldNumber;
const int SymbolStaticEx_EquityMessage::kTradeStatusFieldNumber;
const int SymbolStaticEx_EquityMessage::kCashDividendFieldNumber;
const int SymbolStaticEx_EquityMessage::kSecurityPropertiesFieldNumber;
const int SymbolStaticEx_EquityMessage::kLastTradedateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolStaticEx_EquityMessage::SymbolStaticEx_EquityMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos_data.SymbolStaticEx.EquityMessage)
}
SymbolStaticEx_EquityMessage::SymbolStaticEx_EquityMessage(const SymbolStaticEx_EquityMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&face_value_, &from.face_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&security_properties_) -
    reinterpret_cast<char*>(&face_value_)) + sizeof(security_properties_));
  // @@protoc_insertion_point(copy_constructor:chaos_data.SymbolStaticEx.EquityMessage)
}

void SymbolStaticEx_EquityMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&face_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_tradedate_) -
      reinterpret_cast<char*>(&face_value_)) + sizeof(last_tradedate_));
  security_properties_ = 1;
}

SymbolStaticEx_EquityMessage::~SymbolStaticEx_EquityMessage() {
  // @@protoc_insertion_point(destructor:chaos_data.SymbolStaticEx.EquityMessage)
  SharedDtor();
}

void SymbolStaticEx_EquityMessage::SharedDtor() {
}

void SymbolStaticEx_EquityMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolStaticEx_EquityMessage::descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolStaticEx_EquityMessage& SymbolStaticEx_EquityMessage::default_instance() {
  protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolStaticEx_EquityMessage* SymbolStaticEx_EquityMessage::New(::google::protobuf::Arena* arena) const {
  SymbolStaticEx_EquityMessage* n = new SymbolStaticEx_EquityMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolStaticEx_EquityMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos_data.SymbolStaticEx.EquityMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&face_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_tradedate_) -
        reinterpret_cast<char*>(&face_value_)) + sizeof(last_tradedate_));
    security_properties_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolStaticEx_EquityMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos_data.SymbolStaticEx.EquityMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float face_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_face_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float total_issued = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_total_issued();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &total_issued_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 industry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_industry();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &industry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trade_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_trade_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trade_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float cash_dividend = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_cash_dividend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cash_dividend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chaos_data.SymbolStaticEx.SYMBOL_SP security_properties = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::chaos_data::SymbolStaticEx_SYMBOL_SP_IsValid(value)) {
            set_security_properties(static_cast< ::chaos_data::SymbolStaticEx_SYMBOL_SP >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_tradedate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_last_tradedate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_tradedate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos_data.SymbolStaticEx.EquityMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos_data.SymbolStaticEx.EquityMessage)
  return false;
#undef DO_
}

void SymbolStaticEx_EquityMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos_data.SymbolStaticEx.EquityMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float face_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->face_value(), output);
  }

  // optional float total_issued = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->total_issued(), output);
  }

  // optional uint32 industry = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->industry(), output);
  }

  // optional int32 trade_status = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->trade_status(), output);
  }

  // optional float cash_dividend = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->cash_dividend(), output);
  }

  // optional .chaos_data.SymbolStaticEx.SYMBOL_SP security_properties = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->security_properties(), output);
  }

  // optional uint32 last_tradedate = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->last_tradedate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos_data.SymbolStaticEx.EquityMessage)
}

::google::protobuf::uint8* SymbolStaticEx_EquityMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chaos_data.SymbolStaticEx.EquityMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float face_value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->face_value(), target);
  }

  // optional float total_issued = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->total_issued(), target);
  }

  // optional uint32 industry = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->industry(), target);
  }

  // optional int32 trade_status = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->trade_status(), target);
  }

  // optional float cash_dividend = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->cash_dividend(), target);
  }

  // optional .chaos_data.SymbolStaticEx.SYMBOL_SP security_properties = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->security_properties(), target);
  }

  // optional uint32 last_tradedate = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->last_tradedate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos_data.SymbolStaticEx.EquityMessage)
  return target;
}

size_t SymbolStaticEx_EquityMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chaos_data.SymbolStaticEx.EquityMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional float face_value = 1;
    if (has_face_value()) {
      total_size += 1 + 4;
    }

    // optional float total_issued = 2;
    if (has_total_issued()) {
      total_size += 1 + 4;
    }

    // optional uint32 industry = 3;
    if (has_industry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->industry());
    }

    // optional int32 trade_status = 4;
    if (has_trade_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trade_status());
    }

    // optional float cash_dividend = 5;
    if (has_cash_dividend()) {
      total_size += 1 + 4;
    }

    // optional uint32 last_tradedate = 7;
    if (has_last_tradedate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_tradedate());
    }

    // optional .chaos_data.SymbolStaticEx.SYMBOL_SP security_properties = 6;
    if (has_security_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->security_properties());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolStaticEx_EquityMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos_data.SymbolStaticEx.EquityMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolStaticEx_EquityMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolStaticEx_EquityMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos_data.SymbolStaticEx.EquityMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos_data.SymbolStaticEx.EquityMessage)
    MergeFrom(*source);
  }
}

void SymbolStaticEx_EquityMessage::MergeFrom(const SymbolStaticEx_EquityMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos_data.SymbolStaticEx.EquityMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      face_value_ = from.face_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      total_issued_ = from.total_issued_;
    }
    if (cached_has_bits & 0x00000004u) {
      industry_ = from.industry_;
    }
    if (cached_has_bits & 0x00000008u) {
      trade_status_ = from.trade_status_;
    }
    if (cached_has_bits & 0x00000010u) {
      cash_dividend_ = from.cash_dividend_;
    }
    if (cached_has_bits & 0x00000020u) {
      last_tradedate_ = from.last_tradedate_;
    }
    if (cached_has_bits & 0x00000040u) {
      security_properties_ = from.security_properties_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolStaticEx_EquityMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos_data.SymbolStaticEx.EquityMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolStaticEx_EquityMessage::CopyFrom(const SymbolStaticEx_EquityMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos_data.SymbolStaticEx.EquityMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolStaticEx_EquityMessage::IsInitialized() const {
  return true;
}

void SymbolStaticEx_EquityMessage::Swap(SymbolStaticEx_EquityMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolStaticEx_EquityMessage::InternalSwap(SymbolStaticEx_EquityMessage* other) {
  using std::swap;
  swap(face_value_, other->face_value_);
  swap(total_issued_, other->total_issued_);
  swap(industry_, other->industry_);
  swap(trade_status_, other->trade_status_);
  swap(cash_dividend_, other->cash_dividend_);
  swap(last_tradedate_, other->last_tradedate_);
  swap(security_properties_, other->security_properties_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolStaticEx_EquityMessage::GetMetadata() const {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolStaticEx_EquityMessage

// optional float face_value = 1;
bool SymbolStaticEx_EquityMessage::has_face_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolStaticEx_EquityMessage::set_has_face_value() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolStaticEx_EquityMessage::clear_has_face_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolStaticEx_EquityMessage::clear_face_value() {
  face_value_ = 0;
  clear_has_face_value();
}
float SymbolStaticEx_EquityMessage::face_value() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.face_value)
  return face_value_;
}
void SymbolStaticEx_EquityMessage::set_face_value(float value) {
  set_has_face_value();
  face_value_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.face_value)
}

// optional float total_issued = 2;
bool SymbolStaticEx_EquityMessage::has_total_issued() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolStaticEx_EquityMessage::set_has_total_issued() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolStaticEx_EquityMessage::clear_has_total_issued() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolStaticEx_EquityMessage::clear_total_issued() {
  total_issued_ = 0;
  clear_has_total_issued();
}
float SymbolStaticEx_EquityMessage::total_issued() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.total_issued)
  return total_issued_;
}
void SymbolStaticEx_EquityMessage::set_total_issued(float value) {
  set_has_total_issued();
  total_issued_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.total_issued)
}

// optional uint32 industry = 3;
bool SymbolStaticEx_EquityMessage::has_industry() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolStaticEx_EquityMessage::set_has_industry() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolStaticEx_EquityMessage::clear_has_industry() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolStaticEx_EquityMessage::clear_industry() {
  industry_ = 0u;
  clear_has_industry();
}
::google::protobuf::uint32 SymbolStaticEx_EquityMessage::industry() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.industry)
  return industry_;
}
void SymbolStaticEx_EquityMessage::set_industry(::google::protobuf::uint32 value) {
  set_has_industry();
  industry_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.industry)
}

// optional int32 trade_status = 4;
bool SymbolStaticEx_EquityMessage::has_trade_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SymbolStaticEx_EquityMessage::set_has_trade_status() {
  _has_bits_[0] |= 0x00000008u;
}
void SymbolStaticEx_EquityMessage::clear_has_trade_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void SymbolStaticEx_EquityMessage::clear_trade_status() {
  trade_status_ = 0;
  clear_has_trade_status();
}
::google::protobuf::int32 SymbolStaticEx_EquityMessage::trade_status() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.trade_status)
  return trade_status_;
}
void SymbolStaticEx_EquityMessage::set_trade_status(::google::protobuf::int32 value) {
  set_has_trade_status();
  trade_status_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.trade_status)
}

// optional float cash_dividend = 5;
bool SymbolStaticEx_EquityMessage::has_cash_dividend() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SymbolStaticEx_EquityMessage::set_has_cash_dividend() {
  _has_bits_[0] |= 0x00000010u;
}
void SymbolStaticEx_EquityMessage::clear_has_cash_dividend() {
  _has_bits_[0] &= ~0x00000010u;
}
void SymbolStaticEx_EquityMessage::clear_cash_dividend() {
  cash_dividend_ = 0;
  clear_has_cash_dividend();
}
float SymbolStaticEx_EquityMessage::cash_dividend() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.cash_dividend)
  return cash_dividend_;
}
void SymbolStaticEx_EquityMessage::set_cash_dividend(float value) {
  set_has_cash_dividend();
  cash_dividend_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.cash_dividend)
}

// optional .chaos_data.SymbolStaticEx.SYMBOL_SP security_properties = 6;
bool SymbolStaticEx_EquityMessage::has_security_properties() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SymbolStaticEx_EquityMessage::set_has_security_properties() {
  _has_bits_[0] |= 0x00000040u;
}
void SymbolStaticEx_EquityMessage::clear_has_security_properties() {
  _has_bits_[0] &= ~0x00000040u;
}
void SymbolStaticEx_EquityMessage::clear_security_properties() {
  security_properties_ = 1;
  clear_has_security_properties();
}
::chaos_data::SymbolStaticEx_SYMBOL_SP SymbolStaticEx_EquityMessage::security_properties() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.security_properties)
  return static_cast< ::chaos_data::SymbolStaticEx_SYMBOL_SP >(security_properties_);
}
void SymbolStaticEx_EquityMessage::set_security_properties(::chaos_data::SymbolStaticEx_SYMBOL_SP value) {
  assert(::chaos_data::SymbolStaticEx_SYMBOL_SP_IsValid(value));
  set_has_security_properties();
  security_properties_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.security_properties)
}

// optional uint32 last_tradedate = 7;
bool SymbolStaticEx_EquityMessage::has_last_tradedate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SymbolStaticEx_EquityMessage::set_has_last_tradedate() {
  _has_bits_[0] |= 0x00000020u;
}
void SymbolStaticEx_EquityMessage::clear_has_last_tradedate() {
  _has_bits_[0] &= ~0x00000020u;
}
void SymbolStaticEx_EquityMessage::clear_last_tradedate() {
  last_tradedate_ = 0u;
  clear_has_last_tradedate();
}
::google::protobuf::uint32 SymbolStaticEx_EquityMessage::last_tradedate() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.last_tradedate)
  return last_tradedate_;
}
void SymbolStaticEx_EquityMessage::set_last_tradedate(::google::protobuf::uint32 value) {
  set_has_last_tradedate();
  last_tradedate_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.last_tradedate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolStaticEx_FundMessage::kFaceValueFieldNumber;
const int SymbolStaticEx_FundMessage::kTotalIssuedFieldNumber;
const int SymbolStaticEx_FundMessage::kIopvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolStaticEx_FundMessage::SymbolStaticEx_FundMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos_data.SymbolStaticEx.FundMessage)
}
SymbolStaticEx_FundMessage::SymbolStaticEx_FundMessage(const SymbolStaticEx_FundMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&face_value_, &from.face_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&iopv_) -
    reinterpret_cast<char*>(&face_value_)) + sizeof(iopv_));
  // @@protoc_insertion_point(copy_constructor:chaos_data.SymbolStaticEx.FundMessage)
}

void SymbolStaticEx_FundMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&face_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iopv_) -
      reinterpret_cast<char*>(&face_value_)) + sizeof(iopv_));
}

SymbolStaticEx_FundMessage::~SymbolStaticEx_FundMessage() {
  // @@protoc_insertion_point(destructor:chaos_data.SymbolStaticEx.FundMessage)
  SharedDtor();
}

void SymbolStaticEx_FundMessage::SharedDtor() {
}

void SymbolStaticEx_FundMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolStaticEx_FundMessage::descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolStaticEx_FundMessage& SymbolStaticEx_FundMessage::default_instance() {
  protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolStaticEx_FundMessage* SymbolStaticEx_FundMessage::New(::google::protobuf::Arena* arena) const {
  SymbolStaticEx_FundMessage* n = new SymbolStaticEx_FundMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolStaticEx_FundMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos_data.SymbolStaticEx.FundMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&face_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&iopv_) -
        reinterpret_cast<char*>(&face_value_)) + sizeof(iopv_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolStaticEx_FundMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos_data.SymbolStaticEx.FundMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float face_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_face_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float total_issued = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_total_issued();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &total_issued_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float iopv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_iopv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &iopv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos_data.SymbolStaticEx.FundMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos_data.SymbolStaticEx.FundMessage)
  return false;
#undef DO_
}

void SymbolStaticEx_FundMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos_data.SymbolStaticEx.FundMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float face_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->face_value(), output);
  }

  // optional float total_issued = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->total_issued(), output);
  }

  // optional float iopv = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->iopv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos_data.SymbolStaticEx.FundMessage)
}

::google::protobuf::uint8* SymbolStaticEx_FundMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chaos_data.SymbolStaticEx.FundMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float face_value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->face_value(), target);
  }

  // optional float total_issued = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->total_issued(), target);
  }

  // optional float iopv = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->iopv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos_data.SymbolStaticEx.FundMessage)
  return target;
}

size_t SymbolStaticEx_FundMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chaos_data.SymbolStaticEx.FundMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional float face_value = 1;
    if (has_face_value()) {
      total_size += 1 + 4;
    }

    // optional float total_issued = 2;
    if (has_total_issued()) {
      total_size += 1 + 4;
    }

    // optional float iopv = 3;
    if (has_iopv()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolStaticEx_FundMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos_data.SymbolStaticEx.FundMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolStaticEx_FundMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolStaticEx_FundMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos_data.SymbolStaticEx.FundMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos_data.SymbolStaticEx.FundMessage)
    MergeFrom(*source);
  }
}

void SymbolStaticEx_FundMessage::MergeFrom(const SymbolStaticEx_FundMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos_data.SymbolStaticEx.FundMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      face_value_ = from.face_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      total_issued_ = from.total_issued_;
    }
    if (cached_has_bits & 0x00000004u) {
      iopv_ = from.iopv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolStaticEx_FundMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos_data.SymbolStaticEx.FundMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolStaticEx_FundMessage::CopyFrom(const SymbolStaticEx_FundMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos_data.SymbolStaticEx.FundMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolStaticEx_FundMessage::IsInitialized() const {
  return true;
}

void SymbolStaticEx_FundMessage::Swap(SymbolStaticEx_FundMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolStaticEx_FundMessage::InternalSwap(SymbolStaticEx_FundMessage* other) {
  using std::swap;
  swap(face_value_, other->face_value_);
  swap(total_issued_, other->total_issued_);
  swap(iopv_, other->iopv_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolStaticEx_FundMessage::GetMetadata() const {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolStaticEx_FundMessage

// optional float face_value = 1;
bool SymbolStaticEx_FundMessage::has_face_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolStaticEx_FundMessage::set_has_face_value() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolStaticEx_FundMessage::clear_has_face_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolStaticEx_FundMessage::clear_face_value() {
  face_value_ = 0;
  clear_has_face_value();
}
float SymbolStaticEx_FundMessage::face_value() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FundMessage.face_value)
  return face_value_;
}
void SymbolStaticEx_FundMessage::set_face_value(float value) {
  set_has_face_value();
  face_value_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FundMessage.face_value)
}

// optional float total_issued = 2;
bool SymbolStaticEx_FundMessage::has_total_issued() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolStaticEx_FundMessage::set_has_total_issued() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolStaticEx_FundMessage::clear_has_total_issued() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolStaticEx_FundMessage::clear_total_issued() {
  total_issued_ = 0;
  clear_has_total_issued();
}
float SymbolStaticEx_FundMessage::total_issued() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FundMessage.total_issued)
  return total_issued_;
}
void SymbolStaticEx_FundMessage::set_total_issued(float value) {
  set_has_total_issued();
  total_issued_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FundMessage.total_issued)
}

// optional float iopv = 3;
bool SymbolStaticEx_FundMessage::has_iopv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolStaticEx_FundMessage::set_has_iopv() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolStaticEx_FundMessage::clear_has_iopv() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolStaticEx_FundMessage::clear_iopv() {
  iopv_ = 0;
  clear_has_iopv();
}
float SymbolStaticEx_FundMessage::iopv() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FundMessage.iopv)
  return iopv_;
}
void SymbolStaticEx_FundMessage::set_iopv(float value) {
  set_has_iopv();
  iopv_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FundMessage.iopv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolStaticEx_WarranMessage::kStyleFieldNumber;
const int SymbolStaticEx_WarranMessage::kCpFieldNumber;
const int SymbolStaticEx_WarranMessage::kCnvtRatioFieldNumber;
const int SymbolStaticEx_WarranMessage::kStrikePriceFieldNumber;
const int SymbolStaticEx_WarranMessage::kMaturityDateFieldNumber;
const int SymbolStaticEx_WarranMessage::kUnderLineFieldNumber;
const int SymbolStaticEx_WarranMessage::kBalanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolStaticEx_WarranMessage::SymbolStaticEx_WarranMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos_data.SymbolStaticEx.WarranMessage)
}
SymbolStaticEx_WarranMessage::SymbolStaticEx_WarranMessage(const SymbolStaticEx_WarranMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  under_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_under_line()) {
    under_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.under_line_);
  }
  ::memcpy(&style_, &from.style_,
    static_cast<size_t>(reinterpret_cast<char*>(&balance_) -
    reinterpret_cast<char*>(&style_)) + sizeof(balance_));
  // @@protoc_insertion_point(copy_constructor:chaos_data.SymbolStaticEx.WarranMessage)
}

void SymbolStaticEx_WarranMessage::SharedCtor() {
  _cached_size_ = 0;
  under_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&style_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balance_) -
      reinterpret_cast<char*>(&style_)) + sizeof(balance_));
}

SymbolStaticEx_WarranMessage::~SymbolStaticEx_WarranMessage() {
  // @@protoc_insertion_point(destructor:chaos_data.SymbolStaticEx.WarranMessage)
  SharedDtor();
}

void SymbolStaticEx_WarranMessage::SharedDtor() {
  under_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SymbolStaticEx_WarranMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolStaticEx_WarranMessage::descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolStaticEx_WarranMessage& SymbolStaticEx_WarranMessage::default_instance() {
  protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolStaticEx_WarranMessage* SymbolStaticEx_WarranMessage::New(::google::protobuf::Arena* arena) const {
  SymbolStaticEx_WarranMessage* n = new SymbolStaticEx_WarranMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolStaticEx_WarranMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos_data.SymbolStaticEx.WarranMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_under_line()) {
    GOOGLE_DCHECK(!under_line_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*under_line_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 126u) {
    ::memset(&style_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&balance_) -
        reinterpret_cast<char*>(&style_)) + sizeof(balance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolStaticEx_WarranMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos_data.SymbolStaticEx.WarranMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 style = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_style();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &style_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float cnvt_ratio = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_cnvt_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cnvt_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float strike_price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_strike_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &strike_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 maturity_date = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_maturity_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maturity_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes under_line = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_under_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float balance = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos_data.SymbolStaticEx.WarranMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos_data.SymbolStaticEx.WarranMessage)
  return false;
#undef DO_
}

void SymbolStaticEx_WarranMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos_data.SymbolStaticEx.WarranMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 style = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->style(), output);
  }

  // optional int32 cp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cp(), output);
  }

  // optional float cnvt_ratio = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cnvt_ratio(), output);
  }

  // optional float strike_price = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->strike_price(), output);
  }

  // optional uint32 maturity_date = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->maturity_date(), output);
  }

  // optional bytes under_line = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->under_line(), output);
  }

  // optional float balance = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->balance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos_data.SymbolStaticEx.WarranMessage)
}

::google::protobuf::uint8* SymbolStaticEx_WarranMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chaos_data.SymbolStaticEx.WarranMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 style = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->style(), target);
  }

  // optional int32 cp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cp(), target);
  }

  // optional float cnvt_ratio = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cnvt_ratio(), target);
  }

  // optional float strike_price = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->strike_price(), target);
  }

  // optional uint32 maturity_date = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->maturity_date(), target);
  }

  // optional bytes under_line = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->under_line(), target);
  }

  // optional float balance = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->balance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos_data.SymbolStaticEx.WarranMessage)
  return target;
}

size_t SymbolStaticEx_WarranMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chaos_data.SymbolStaticEx.WarranMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes under_line = 6;
    if (has_under_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->under_line());
    }

    // optional int32 style = 1;
    if (has_style()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->style());
    }

    // optional int32 cp = 2;
    if (has_cp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cp());
    }

    // optional float cnvt_ratio = 3;
    if (has_cnvt_ratio()) {
      total_size += 1 + 4;
    }

    // optional float strike_price = 4;
    if (has_strike_price()) {
      total_size += 1 + 4;
    }

    // optional uint32 maturity_date = 5;
    if (has_maturity_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maturity_date());
    }

    // optional float balance = 7;
    if (has_balance()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolStaticEx_WarranMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos_data.SymbolStaticEx.WarranMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolStaticEx_WarranMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolStaticEx_WarranMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos_data.SymbolStaticEx.WarranMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos_data.SymbolStaticEx.WarranMessage)
    MergeFrom(*source);
  }
}

void SymbolStaticEx_WarranMessage::MergeFrom(const SymbolStaticEx_WarranMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos_data.SymbolStaticEx.WarranMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_under_line();
      under_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.under_line_);
    }
    if (cached_has_bits & 0x00000002u) {
      style_ = from.style_;
    }
    if (cached_has_bits & 0x00000004u) {
      cp_ = from.cp_;
    }
    if (cached_has_bits & 0x00000008u) {
      cnvt_ratio_ = from.cnvt_ratio_;
    }
    if (cached_has_bits & 0x00000010u) {
      strike_price_ = from.strike_price_;
    }
    if (cached_has_bits & 0x00000020u) {
      maturity_date_ = from.maturity_date_;
    }
    if (cached_has_bits & 0x00000040u) {
      balance_ = from.balance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolStaticEx_WarranMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos_data.SymbolStaticEx.WarranMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolStaticEx_WarranMessage::CopyFrom(const SymbolStaticEx_WarranMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos_data.SymbolStaticEx.WarranMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolStaticEx_WarranMessage::IsInitialized() const {
  return true;
}

void SymbolStaticEx_WarranMessage::Swap(SymbolStaticEx_WarranMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolStaticEx_WarranMessage::InternalSwap(SymbolStaticEx_WarranMessage* other) {
  using std::swap;
  under_line_.Swap(&other->under_line_);
  swap(style_, other->style_);
  swap(cp_, other->cp_);
  swap(cnvt_ratio_, other->cnvt_ratio_);
  swap(strike_price_, other->strike_price_);
  swap(maturity_date_, other->maturity_date_);
  swap(balance_, other->balance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolStaticEx_WarranMessage::GetMetadata() const {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolStaticEx_WarranMessage

// optional int32 style = 1;
bool SymbolStaticEx_WarranMessage::has_style() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolStaticEx_WarranMessage::set_has_style() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolStaticEx_WarranMessage::clear_has_style() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolStaticEx_WarranMessage::clear_style() {
  style_ = 0;
  clear_has_style();
}
::google::protobuf::int32 SymbolStaticEx_WarranMessage::style() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.style)
  return style_;
}
void SymbolStaticEx_WarranMessage::set_style(::google::protobuf::int32 value) {
  set_has_style();
  style_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.style)
}

// optional int32 cp = 2;
bool SymbolStaticEx_WarranMessage::has_cp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolStaticEx_WarranMessage::set_has_cp() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolStaticEx_WarranMessage::clear_has_cp() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolStaticEx_WarranMessage::clear_cp() {
  cp_ = 0;
  clear_has_cp();
}
::google::protobuf::int32 SymbolStaticEx_WarranMessage::cp() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.cp)
  return cp_;
}
void SymbolStaticEx_WarranMessage::set_cp(::google::protobuf::int32 value) {
  set_has_cp();
  cp_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.cp)
}

// optional float cnvt_ratio = 3;
bool SymbolStaticEx_WarranMessage::has_cnvt_ratio() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SymbolStaticEx_WarranMessage::set_has_cnvt_ratio() {
  _has_bits_[0] |= 0x00000008u;
}
void SymbolStaticEx_WarranMessage::clear_has_cnvt_ratio() {
  _has_bits_[0] &= ~0x00000008u;
}
void SymbolStaticEx_WarranMessage::clear_cnvt_ratio() {
  cnvt_ratio_ = 0;
  clear_has_cnvt_ratio();
}
float SymbolStaticEx_WarranMessage::cnvt_ratio() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.cnvt_ratio)
  return cnvt_ratio_;
}
void SymbolStaticEx_WarranMessage::set_cnvt_ratio(float value) {
  set_has_cnvt_ratio();
  cnvt_ratio_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.cnvt_ratio)
}

// optional float strike_price = 4;
bool SymbolStaticEx_WarranMessage::has_strike_price() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SymbolStaticEx_WarranMessage::set_has_strike_price() {
  _has_bits_[0] |= 0x00000010u;
}
void SymbolStaticEx_WarranMessage::clear_has_strike_price() {
  _has_bits_[0] &= ~0x00000010u;
}
void SymbolStaticEx_WarranMessage::clear_strike_price() {
  strike_price_ = 0;
  clear_has_strike_price();
}
float SymbolStaticEx_WarranMessage::strike_price() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.strike_price)
  return strike_price_;
}
void SymbolStaticEx_WarranMessage::set_strike_price(float value) {
  set_has_strike_price();
  strike_price_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.strike_price)
}

// optional uint32 maturity_date = 5;
bool SymbolStaticEx_WarranMessage::has_maturity_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SymbolStaticEx_WarranMessage::set_has_maturity_date() {
  _has_bits_[0] |= 0x00000020u;
}
void SymbolStaticEx_WarranMessage::clear_has_maturity_date() {
  _has_bits_[0] &= ~0x00000020u;
}
void SymbolStaticEx_WarranMessage::clear_maturity_date() {
  maturity_date_ = 0u;
  clear_has_maturity_date();
}
::google::protobuf::uint32 SymbolStaticEx_WarranMessage::maturity_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.maturity_date)
  return maturity_date_;
}
void SymbolStaticEx_WarranMessage::set_maturity_date(::google::protobuf::uint32 value) {
  set_has_maturity_date();
  maturity_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.maturity_date)
}

// optional bytes under_line = 6;
bool SymbolStaticEx_WarranMessage::has_under_line() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolStaticEx_WarranMessage::set_has_under_line() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolStaticEx_WarranMessage::clear_has_under_line() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolStaticEx_WarranMessage::clear_under_line() {
  under_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_under_line();
}
const ::std::string& SymbolStaticEx_WarranMessage::under_line() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.under_line)
  return under_line_.GetNoArena();
}
void SymbolStaticEx_WarranMessage::set_under_line(const ::std::string& value) {
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}
#if LANG_CXX11
void SymbolStaticEx_WarranMessage::set_under_line(::std::string&& value) {
  set_has_under_line();
  under_line_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}
#endif
void SymbolStaticEx_WarranMessage::set_under_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}
void SymbolStaticEx_WarranMessage::set_under_line(const void* value, size_t size) {
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}
::std::string* SymbolStaticEx_WarranMessage::mutable_under_line() {
  set_has_under_line();
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.WarranMessage.under_line)
  return under_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SymbolStaticEx_WarranMessage::release_under_line() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.WarranMessage.under_line)
  clear_has_under_line();
  return under_line_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SymbolStaticEx_WarranMessage::set_allocated_under_line(::std::string* under_line) {
  if (under_line != NULL) {
    set_has_under_line();
  } else {
    clear_has_under_line();
  }
  under_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), under_line);
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}

// optional float balance = 7;
bool SymbolStaticEx_WarranMessage::has_balance() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SymbolStaticEx_WarranMessage::set_has_balance() {
  _has_bits_[0] |= 0x00000040u;
}
void SymbolStaticEx_WarranMessage::clear_has_balance() {
  _has_bits_[0] &= ~0x00000040u;
}
void SymbolStaticEx_WarranMessage::clear_balance() {
  balance_ = 0;
  clear_has_balance();
}
float SymbolStaticEx_WarranMessage::balance() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.balance)
  return balance_;
}
void SymbolStaticEx_WarranMessage::set_balance(float value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.balance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolStaticEx_BoundMessage::kMaturityDateFieldNumber;
const int SymbolStaticEx_BoundMessage::kIntaccruDateFieldNumber;
const int SymbolStaticEx_BoundMessage::kIsssuePriceFieldNumber;
const int SymbolStaticEx_BoundMessage::kCouponRateFieldNumber;
const int SymbolStaticEx_BoundMessage::kFaceValueFieldNumber;
const int SymbolStaticEx_BoundMessage::kAccruedIntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolStaticEx_BoundMessage::SymbolStaticEx_BoundMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos_data.SymbolStaticEx.BoundMessage)
}
SymbolStaticEx_BoundMessage::SymbolStaticEx_BoundMessage(const SymbolStaticEx_BoundMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maturity_date_, &from.maturity_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&accrued_int_) -
    reinterpret_cast<char*>(&maturity_date_)) + sizeof(accrued_int_));
  // @@protoc_insertion_point(copy_constructor:chaos_data.SymbolStaticEx.BoundMessage)
}

void SymbolStaticEx_BoundMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&maturity_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accrued_int_) -
      reinterpret_cast<char*>(&maturity_date_)) + sizeof(accrued_int_));
}

SymbolStaticEx_BoundMessage::~SymbolStaticEx_BoundMessage() {
  // @@protoc_insertion_point(destructor:chaos_data.SymbolStaticEx.BoundMessage)
  SharedDtor();
}

void SymbolStaticEx_BoundMessage::SharedDtor() {
}

void SymbolStaticEx_BoundMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolStaticEx_BoundMessage::descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolStaticEx_BoundMessage& SymbolStaticEx_BoundMessage::default_instance() {
  protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolStaticEx_BoundMessage* SymbolStaticEx_BoundMessage::New(::google::protobuf::Arena* arena) const {
  SymbolStaticEx_BoundMessage* n = new SymbolStaticEx_BoundMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolStaticEx_BoundMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos_data.SymbolStaticEx.BoundMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&maturity_date_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&accrued_int_) -
        reinterpret_cast<char*>(&maturity_date_)) + sizeof(accrued_int_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolStaticEx_BoundMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos_data.SymbolStaticEx.BoundMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 maturity_date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_maturity_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maturity_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 intaccru_date = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_intaccru_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intaccru_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float isssue_price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_isssue_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &isssue_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float coupon_rate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_coupon_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &coupon_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float face_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_face_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float accrued_int = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_accrued_int();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accrued_int_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos_data.SymbolStaticEx.BoundMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos_data.SymbolStaticEx.BoundMessage)
  return false;
#undef DO_
}

void SymbolStaticEx_BoundMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos_data.SymbolStaticEx.BoundMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 maturity_date = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maturity_date(), output);
  }

  // optional uint32 intaccru_date = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->intaccru_date(), output);
  }

  // optional float isssue_price = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->isssue_price(), output);
  }

  // optional float coupon_rate = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->coupon_rate(), output);
  }

  // optional float face_value = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->face_value(), output);
  }

  // optional float accrued_int = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->accrued_int(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos_data.SymbolStaticEx.BoundMessage)
}

::google::protobuf::uint8* SymbolStaticEx_BoundMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chaos_data.SymbolStaticEx.BoundMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 maturity_date = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maturity_date(), target);
  }

  // optional uint32 intaccru_date = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->intaccru_date(), target);
  }

  // optional float isssue_price = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->isssue_price(), target);
  }

  // optional float coupon_rate = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->coupon_rate(), target);
  }

  // optional float face_value = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->face_value(), target);
  }

  // optional float accrued_int = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->accrued_int(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos_data.SymbolStaticEx.BoundMessage)
  return target;
}

size_t SymbolStaticEx_BoundMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chaos_data.SymbolStaticEx.BoundMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 maturity_date = 1;
    if (has_maturity_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maturity_date());
    }

    // optional uint32 intaccru_date = 2;
    if (has_intaccru_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->intaccru_date());
    }

    // optional float isssue_price = 3;
    if (has_isssue_price()) {
      total_size += 1 + 4;
    }

    // optional float coupon_rate = 4;
    if (has_coupon_rate()) {
      total_size += 1 + 4;
    }

    // optional float face_value = 5;
    if (has_face_value()) {
      total_size += 1 + 4;
    }

    // optional float accrued_int = 6;
    if (has_accrued_int()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolStaticEx_BoundMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos_data.SymbolStaticEx.BoundMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolStaticEx_BoundMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolStaticEx_BoundMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos_data.SymbolStaticEx.BoundMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos_data.SymbolStaticEx.BoundMessage)
    MergeFrom(*source);
  }
}

void SymbolStaticEx_BoundMessage::MergeFrom(const SymbolStaticEx_BoundMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos_data.SymbolStaticEx.BoundMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      maturity_date_ = from.maturity_date_;
    }
    if (cached_has_bits & 0x00000002u) {
      intaccru_date_ = from.intaccru_date_;
    }
    if (cached_has_bits & 0x00000004u) {
      isssue_price_ = from.isssue_price_;
    }
    if (cached_has_bits & 0x00000008u) {
      coupon_rate_ = from.coupon_rate_;
    }
    if (cached_has_bits & 0x00000010u) {
      face_value_ = from.face_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      accrued_int_ = from.accrued_int_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolStaticEx_BoundMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos_data.SymbolStaticEx.BoundMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolStaticEx_BoundMessage::CopyFrom(const SymbolStaticEx_BoundMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos_data.SymbolStaticEx.BoundMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolStaticEx_BoundMessage::IsInitialized() const {
  return true;
}

void SymbolStaticEx_BoundMessage::Swap(SymbolStaticEx_BoundMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolStaticEx_BoundMessage::InternalSwap(SymbolStaticEx_BoundMessage* other) {
  using std::swap;
  swap(maturity_date_, other->maturity_date_);
  swap(intaccru_date_, other->intaccru_date_);
  swap(isssue_price_, other->isssue_price_);
  swap(coupon_rate_, other->coupon_rate_);
  swap(face_value_, other->face_value_);
  swap(accrued_int_, other->accrued_int_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolStaticEx_BoundMessage::GetMetadata() const {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolStaticEx_BoundMessage

// optional uint32 maturity_date = 1;
bool SymbolStaticEx_BoundMessage::has_maturity_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolStaticEx_BoundMessage::set_has_maturity_date() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolStaticEx_BoundMessage::clear_has_maturity_date() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolStaticEx_BoundMessage::clear_maturity_date() {
  maturity_date_ = 0u;
  clear_has_maturity_date();
}
::google::protobuf::uint32 SymbolStaticEx_BoundMessage::maturity_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.maturity_date)
  return maturity_date_;
}
void SymbolStaticEx_BoundMessage::set_maturity_date(::google::protobuf::uint32 value) {
  set_has_maturity_date();
  maturity_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.maturity_date)
}

// optional uint32 intaccru_date = 2;
bool SymbolStaticEx_BoundMessage::has_intaccru_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolStaticEx_BoundMessage::set_has_intaccru_date() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolStaticEx_BoundMessage::clear_has_intaccru_date() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolStaticEx_BoundMessage::clear_intaccru_date() {
  intaccru_date_ = 0u;
  clear_has_intaccru_date();
}
::google::protobuf::uint32 SymbolStaticEx_BoundMessage::intaccru_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.intaccru_date)
  return intaccru_date_;
}
void SymbolStaticEx_BoundMessage::set_intaccru_date(::google::protobuf::uint32 value) {
  set_has_intaccru_date();
  intaccru_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.intaccru_date)
}

// optional float isssue_price = 3;
bool SymbolStaticEx_BoundMessage::has_isssue_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolStaticEx_BoundMessage::set_has_isssue_price() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolStaticEx_BoundMessage::clear_has_isssue_price() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolStaticEx_BoundMessage::clear_isssue_price() {
  isssue_price_ = 0;
  clear_has_isssue_price();
}
float SymbolStaticEx_BoundMessage::isssue_price() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.isssue_price)
  return isssue_price_;
}
void SymbolStaticEx_BoundMessage::set_isssue_price(float value) {
  set_has_isssue_price();
  isssue_price_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.isssue_price)
}

// optional float coupon_rate = 4;
bool SymbolStaticEx_BoundMessage::has_coupon_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SymbolStaticEx_BoundMessage::set_has_coupon_rate() {
  _has_bits_[0] |= 0x00000008u;
}
void SymbolStaticEx_BoundMessage::clear_has_coupon_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
void SymbolStaticEx_BoundMessage::clear_coupon_rate() {
  coupon_rate_ = 0;
  clear_has_coupon_rate();
}
float SymbolStaticEx_BoundMessage::coupon_rate() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.coupon_rate)
  return coupon_rate_;
}
void SymbolStaticEx_BoundMessage::set_coupon_rate(float value) {
  set_has_coupon_rate();
  coupon_rate_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.coupon_rate)
}

// optional float face_value = 5;
bool SymbolStaticEx_BoundMessage::has_face_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SymbolStaticEx_BoundMessage::set_has_face_value() {
  _has_bits_[0] |= 0x00000010u;
}
void SymbolStaticEx_BoundMessage::clear_has_face_value() {
  _has_bits_[0] &= ~0x00000010u;
}
void SymbolStaticEx_BoundMessage::clear_face_value() {
  face_value_ = 0;
  clear_has_face_value();
}
float SymbolStaticEx_BoundMessage::face_value() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.face_value)
  return face_value_;
}
void SymbolStaticEx_BoundMessage::set_face_value(float value) {
  set_has_face_value();
  face_value_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.face_value)
}

// optional float accrued_int = 6;
bool SymbolStaticEx_BoundMessage::has_accrued_int() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SymbolStaticEx_BoundMessage::set_has_accrued_int() {
  _has_bits_[0] |= 0x00000020u;
}
void SymbolStaticEx_BoundMessage::clear_has_accrued_int() {
  _has_bits_[0] &= ~0x00000020u;
}
void SymbolStaticEx_BoundMessage::clear_accrued_int() {
  accrued_int_ = 0;
  clear_has_accrued_int();
}
float SymbolStaticEx_BoundMessage::accrued_int() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.accrued_int)
  return accrued_int_;
}
void SymbolStaticEx_BoundMessage::set_accrued_int(float value) {
  set_has_accrued_int();
  accrued_int_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.accrued_int)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolStaticEx_CNVTMessage::kStyleFieldNumber;
const int SymbolStaticEx_CNVTMessage::kCpFieldNumber;
const int SymbolStaticEx_CNVTMessage::kCnvtRatioFieldNumber;
const int SymbolStaticEx_CNVTMessage::kStrikePriceFieldNumber;
const int SymbolStaticEx_CNVTMessage::kMaturityDateFieldNumber;
const int SymbolStaticEx_CNVTMessage::kUnderLineFieldNumber;
const int SymbolStaticEx_CNVTMessage::kAccruedIntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolStaticEx_CNVTMessage::SymbolStaticEx_CNVTMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos_data.SymbolStaticEx.CNVTMessage)
}
SymbolStaticEx_CNVTMessage::SymbolStaticEx_CNVTMessage(const SymbolStaticEx_CNVTMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  under_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_under_line()) {
    under_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.under_line_);
  }
  ::memcpy(&style_, &from.style_,
    static_cast<size_t>(reinterpret_cast<char*>(&accrued_int_) -
    reinterpret_cast<char*>(&style_)) + sizeof(accrued_int_));
  // @@protoc_insertion_point(copy_constructor:chaos_data.SymbolStaticEx.CNVTMessage)
}

void SymbolStaticEx_CNVTMessage::SharedCtor() {
  _cached_size_ = 0;
  under_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&style_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accrued_int_) -
      reinterpret_cast<char*>(&style_)) + sizeof(accrued_int_));
}

SymbolStaticEx_CNVTMessage::~SymbolStaticEx_CNVTMessage() {
  // @@protoc_insertion_point(destructor:chaos_data.SymbolStaticEx.CNVTMessage)
  SharedDtor();
}

void SymbolStaticEx_CNVTMessage::SharedDtor() {
  under_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SymbolStaticEx_CNVTMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolStaticEx_CNVTMessage::descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolStaticEx_CNVTMessage& SymbolStaticEx_CNVTMessage::default_instance() {
  protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolStaticEx_CNVTMessage* SymbolStaticEx_CNVTMessage::New(::google::protobuf::Arena* arena) const {
  SymbolStaticEx_CNVTMessage* n = new SymbolStaticEx_CNVTMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolStaticEx_CNVTMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos_data.SymbolStaticEx.CNVTMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_under_line()) {
    GOOGLE_DCHECK(!under_line_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*under_line_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 126u) {
    ::memset(&style_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&accrued_int_) -
        reinterpret_cast<char*>(&style_)) + sizeof(accrued_int_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolStaticEx_CNVTMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos_data.SymbolStaticEx.CNVTMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 style = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_style();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &style_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float cnvt_ratio = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_cnvt_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cnvt_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float strike_price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_strike_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &strike_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 maturity_date = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_maturity_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maturity_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes under_line = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_under_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float accrued_int = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_accrued_int();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accrued_int_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos_data.SymbolStaticEx.CNVTMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos_data.SymbolStaticEx.CNVTMessage)
  return false;
#undef DO_
}

void SymbolStaticEx_CNVTMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos_data.SymbolStaticEx.CNVTMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 style = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->style(), output);
  }

  // optional int32 cp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cp(), output);
  }

  // optional float cnvt_ratio = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cnvt_ratio(), output);
  }

  // optional float strike_price = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->strike_price(), output);
  }

  // optional uint32 maturity_date = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->maturity_date(), output);
  }

  // optional bytes under_line = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->under_line(), output);
  }

  // optional float accrued_int = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->accrued_int(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos_data.SymbolStaticEx.CNVTMessage)
}

::google::protobuf::uint8* SymbolStaticEx_CNVTMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chaos_data.SymbolStaticEx.CNVTMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 style = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->style(), target);
  }

  // optional int32 cp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cp(), target);
  }

  // optional float cnvt_ratio = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cnvt_ratio(), target);
  }

  // optional float strike_price = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->strike_price(), target);
  }

  // optional uint32 maturity_date = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->maturity_date(), target);
  }

  // optional bytes under_line = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->under_line(), target);
  }

  // optional float accrued_int = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->accrued_int(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos_data.SymbolStaticEx.CNVTMessage)
  return target;
}

size_t SymbolStaticEx_CNVTMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chaos_data.SymbolStaticEx.CNVTMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes under_line = 6;
    if (has_under_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->under_line());
    }

    // optional int32 style = 1;
    if (has_style()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->style());
    }

    // optional int32 cp = 2;
    if (has_cp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cp());
    }

    // optional float cnvt_ratio = 3;
    if (has_cnvt_ratio()) {
      total_size += 1 + 4;
    }

    // optional float strike_price = 4;
    if (has_strike_price()) {
      total_size += 1 + 4;
    }

    // optional uint32 maturity_date = 5;
    if (has_maturity_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maturity_date());
    }

    // optional float accrued_int = 7;
    if (has_accrued_int()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolStaticEx_CNVTMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos_data.SymbolStaticEx.CNVTMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolStaticEx_CNVTMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolStaticEx_CNVTMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos_data.SymbolStaticEx.CNVTMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos_data.SymbolStaticEx.CNVTMessage)
    MergeFrom(*source);
  }
}

void SymbolStaticEx_CNVTMessage::MergeFrom(const SymbolStaticEx_CNVTMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos_data.SymbolStaticEx.CNVTMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_under_line();
      under_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.under_line_);
    }
    if (cached_has_bits & 0x00000002u) {
      style_ = from.style_;
    }
    if (cached_has_bits & 0x00000004u) {
      cp_ = from.cp_;
    }
    if (cached_has_bits & 0x00000008u) {
      cnvt_ratio_ = from.cnvt_ratio_;
    }
    if (cached_has_bits & 0x00000010u) {
      strike_price_ = from.strike_price_;
    }
    if (cached_has_bits & 0x00000020u) {
      maturity_date_ = from.maturity_date_;
    }
    if (cached_has_bits & 0x00000040u) {
      accrued_int_ = from.accrued_int_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolStaticEx_CNVTMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos_data.SymbolStaticEx.CNVTMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolStaticEx_CNVTMessage::CopyFrom(const SymbolStaticEx_CNVTMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos_data.SymbolStaticEx.CNVTMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolStaticEx_CNVTMessage::IsInitialized() const {
  return true;
}

void SymbolStaticEx_CNVTMessage::Swap(SymbolStaticEx_CNVTMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolStaticEx_CNVTMessage::InternalSwap(SymbolStaticEx_CNVTMessage* other) {
  using std::swap;
  under_line_.Swap(&other->under_line_);
  swap(style_, other->style_);
  swap(cp_, other->cp_);
  swap(cnvt_ratio_, other->cnvt_ratio_);
  swap(strike_price_, other->strike_price_);
  swap(maturity_date_, other->maturity_date_);
  swap(accrued_int_, other->accrued_int_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolStaticEx_CNVTMessage::GetMetadata() const {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolStaticEx_CNVTMessage

// optional int32 style = 1;
bool SymbolStaticEx_CNVTMessage::has_style() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolStaticEx_CNVTMessage::set_has_style() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolStaticEx_CNVTMessage::clear_has_style() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolStaticEx_CNVTMessage::clear_style() {
  style_ = 0;
  clear_has_style();
}
::google::protobuf::int32 SymbolStaticEx_CNVTMessage::style() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.style)
  return style_;
}
void SymbolStaticEx_CNVTMessage::set_style(::google::protobuf::int32 value) {
  set_has_style();
  style_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.style)
}

// optional int32 cp = 2;
bool SymbolStaticEx_CNVTMessage::has_cp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolStaticEx_CNVTMessage::set_has_cp() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolStaticEx_CNVTMessage::clear_has_cp() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolStaticEx_CNVTMessage::clear_cp() {
  cp_ = 0;
  clear_has_cp();
}
::google::protobuf::int32 SymbolStaticEx_CNVTMessage::cp() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.cp)
  return cp_;
}
void SymbolStaticEx_CNVTMessage::set_cp(::google::protobuf::int32 value) {
  set_has_cp();
  cp_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.cp)
}

// optional float cnvt_ratio = 3;
bool SymbolStaticEx_CNVTMessage::has_cnvt_ratio() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SymbolStaticEx_CNVTMessage::set_has_cnvt_ratio() {
  _has_bits_[0] |= 0x00000008u;
}
void SymbolStaticEx_CNVTMessage::clear_has_cnvt_ratio() {
  _has_bits_[0] &= ~0x00000008u;
}
void SymbolStaticEx_CNVTMessage::clear_cnvt_ratio() {
  cnvt_ratio_ = 0;
  clear_has_cnvt_ratio();
}
float SymbolStaticEx_CNVTMessage::cnvt_ratio() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.cnvt_ratio)
  return cnvt_ratio_;
}
void SymbolStaticEx_CNVTMessage::set_cnvt_ratio(float value) {
  set_has_cnvt_ratio();
  cnvt_ratio_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.cnvt_ratio)
}

// optional float strike_price = 4;
bool SymbolStaticEx_CNVTMessage::has_strike_price() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SymbolStaticEx_CNVTMessage::set_has_strike_price() {
  _has_bits_[0] |= 0x00000010u;
}
void SymbolStaticEx_CNVTMessage::clear_has_strike_price() {
  _has_bits_[0] &= ~0x00000010u;
}
void SymbolStaticEx_CNVTMessage::clear_strike_price() {
  strike_price_ = 0;
  clear_has_strike_price();
}
float SymbolStaticEx_CNVTMessage::strike_price() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.strike_price)
  return strike_price_;
}
void SymbolStaticEx_CNVTMessage::set_strike_price(float value) {
  set_has_strike_price();
  strike_price_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.strike_price)
}

// optional uint32 maturity_date = 5;
bool SymbolStaticEx_CNVTMessage::has_maturity_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SymbolStaticEx_CNVTMessage::set_has_maturity_date() {
  _has_bits_[0] |= 0x00000020u;
}
void SymbolStaticEx_CNVTMessage::clear_has_maturity_date() {
  _has_bits_[0] &= ~0x00000020u;
}
void SymbolStaticEx_CNVTMessage::clear_maturity_date() {
  maturity_date_ = 0u;
  clear_has_maturity_date();
}
::google::protobuf::uint32 SymbolStaticEx_CNVTMessage::maturity_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.maturity_date)
  return maturity_date_;
}
void SymbolStaticEx_CNVTMessage::set_maturity_date(::google::protobuf::uint32 value) {
  set_has_maturity_date();
  maturity_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.maturity_date)
}

// optional bytes under_line = 6;
bool SymbolStaticEx_CNVTMessage::has_under_line() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolStaticEx_CNVTMessage::set_has_under_line() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolStaticEx_CNVTMessage::clear_has_under_line() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolStaticEx_CNVTMessage::clear_under_line() {
  under_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_under_line();
}
const ::std::string& SymbolStaticEx_CNVTMessage::under_line() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
  return under_line_.GetNoArena();
}
void SymbolStaticEx_CNVTMessage::set_under_line(const ::std::string& value) {
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}
#if LANG_CXX11
void SymbolStaticEx_CNVTMessage::set_under_line(::std::string&& value) {
  set_has_under_line();
  under_line_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}
#endif
void SymbolStaticEx_CNVTMessage::set_under_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}
void SymbolStaticEx_CNVTMessage::set_under_line(const void* value, size_t size) {
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}
::std::string* SymbolStaticEx_CNVTMessage::mutable_under_line() {
  set_has_under_line();
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
  return under_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SymbolStaticEx_CNVTMessage::release_under_line() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
  clear_has_under_line();
  return under_line_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SymbolStaticEx_CNVTMessage::set_allocated_under_line(::std::string* under_line) {
  if (under_line != NULL) {
    set_has_under_line();
  } else {
    clear_has_under_line();
  }
  under_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), under_line);
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}

// optional float accrued_int = 7;
bool SymbolStaticEx_CNVTMessage::has_accrued_int() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SymbolStaticEx_CNVTMessage::set_has_accrued_int() {
  _has_bits_[0] |= 0x00000040u;
}
void SymbolStaticEx_CNVTMessage::clear_has_accrued_int() {
  _has_bits_[0] &= ~0x00000040u;
}
void SymbolStaticEx_CNVTMessage::clear_accrued_int() {
  accrued_int_ = 0;
  clear_has_accrued_int();
}
float SymbolStaticEx_CNVTMessage::accrued_int() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.accrued_int)
  return accrued_int_;
}
void SymbolStaticEx_CNVTMessage::set_accrued_int(float value) {
  set_has_accrued_int();
  accrued_int_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.accrued_int)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolStaticEx_FutureMessage::kLastDayOIFieldNumber;
const int SymbolStaticEx_FutureMessage::kLastSettlePriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolStaticEx_FutureMessage::SymbolStaticEx_FutureMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos_data.SymbolStaticEx.FutureMessage)
}
SymbolStaticEx_FutureMessage::SymbolStaticEx_FutureMessage(const SymbolStaticEx_FutureMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_day_oi_, &from.last_day_oi_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_settle_price_) -
    reinterpret_cast<char*>(&last_day_oi_)) + sizeof(last_settle_price_));
  // @@protoc_insertion_point(copy_constructor:chaos_data.SymbolStaticEx.FutureMessage)
}

void SymbolStaticEx_FutureMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&last_day_oi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_settle_price_) -
      reinterpret_cast<char*>(&last_day_oi_)) + sizeof(last_settle_price_));
}

SymbolStaticEx_FutureMessage::~SymbolStaticEx_FutureMessage() {
  // @@protoc_insertion_point(destructor:chaos_data.SymbolStaticEx.FutureMessage)
  SharedDtor();
}

void SymbolStaticEx_FutureMessage::SharedDtor() {
}

void SymbolStaticEx_FutureMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolStaticEx_FutureMessage::descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolStaticEx_FutureMessage& SymbolStaticEx_FutureMessage::default_instance() {
  protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolStaticEx_FutureMessage* SymbolStaticEx_FutureMessage::New(::google::protobuf::Arena* arena) const {
  SymbolStaticEx_FutureMessage* n = new SymbolStaticEx_FutureMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolStaticEx_FutureMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos_data.SymbolStaticEx.FutureMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&last_day_oi_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_settle_price_) -
        reinterpret_cast<char*>(&last_day_oi_)) + sizeof(last_settle_price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolStaticEx_FutureMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos_data.SymbolStaticEx.FutureMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 last_day_OI = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_last_day_oi();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_day_oi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float last_settle_price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_last_settle_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &last_settle_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos_data.SymbolStaticEx.FutureMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos_data.SymbolStaticEx.FutureMessage)
  return false;
#undef DO_
}

void SymbolStaticEx_FutureMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos_data.SymbolStaticEx.FutureMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 last_day_OI = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->last_day_oi(), output);
  }

  // optional float last_settle_price = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->last_settle_price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos_data.SymbolStaticEx.FutureMessage)
}

::google::protobuf::uint8* SymbolStaticEx_FutureMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chaos_data.SymbolStaticEx.FutureMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 last_day_OI = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->last_day_oi(), target);
  }

  // optional float last_settle_price = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->last_settle_price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos_data.SymbolStaticEx.FutureMessage)
  return target;
}

size_t SymbolStaticEx_FutureMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chaos_data.SymbolStaticEx.FutureMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 last_day_OI = 1;
    if (has_last_day_oi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_day_oi());
    }

    // optional float last_settle_price = 2;
    if (has_last_settle_price()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolStaticEx_FutureMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos_data.SymbolStaticEx.FutureMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolStaticEx_FutureMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolStaticEx_FutureMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos_data.SymbolStaticEx.FutureMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos_data.SymbolStaticEx.FutureMessage)
    MergeFrom(*source);
  }
}

void SymbolStaticEx_FutureMessage::MergeFrom(const SymbolStaticEx_FutureMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos_data.SymbolStaticEx.FutureMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      last_day_oi_ = from.last_day_oi_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_settle_price_ = from.last_settle_price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolStaticEx_FutureMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos_data.SymbolStaticEx.FutureMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolStaticEx_FutureMessage::CopyFrom(const SymbolStaticEx_FutureMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos_data.SymbolStaticEx.FutureMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolStaticEx_FutureMessage::IsInitialized() const {
  return true;
}

void SymbolStaticEx_FutureMessage::Swap(SymbolStaticEx_FutureMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolStaticEx_FutureMessage::InternalSwap(SymbolStaticEx_FutureMessage* other) {
  using std::swap;
  swap(last_day_oi_, other->last_day_oi_);
  swap(last_settle_price_, other->last_settle_price_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolStaticEx_FutureMessage::GetMetadata() const {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolStaticEx_FutureMessage

// optional uint32 last_day_OI = 1;
bool SymbolStaticEx_FutureMessage::has_last_day_oi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolStaticEx_FutureMessage::set_has_last_day_oi() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolStaticEx_FutureMessage::clear_has_last_day_oi() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolStaticEx_FutureMessage::clear_last_day_oi() {
  last_day_oi_ = 0u;
  clear_has_last_day_oi();
}
::google::protobuf::uint32 SymbolStaticEx_FutureMessage::last_day_oi() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FutureMessage.last_day_OI)
  return last_day_oi_;
}
void SymbolStaticEx_FutureMessage::set_last_day_oi(::google::protobuf::uint32 value) {
  set_has_last_day_oi();
  last_day_oi_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FutureMessage.last_day_OI)
}

// optional float last_settle_price = 2;
bool SymbolStaticEx_FutureMessage::has_last_settle_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolStaticEx_FutureMessage::set_has_last_settle_price() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolStaticEx_FutureMessage::clear_has_last_settle_price() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolStaticEx_FutureMessage::clear_last_settle_price() {
  last_settle_price_ = 0;
  clear_has_last_settle_price();
}
float SymbolStaticEx_FutureMessage::last_settle_price() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FutureMessage.last_settle_price)
  return last_settle_price_;
}
void SymbolStaticEx_FutureMessage::set_last_settle_price(float value) {
  set_has_last_settle_price();
  last_settle_price_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FutureMessage.last_settle_price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolStaticEx_TruestMessage::kAssetFieldNumber;
const int SymbolStaticEx_TruestMessage::kAssetDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolStaticEx_TruestMessage::SymbolStaticEx_TruestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos_data.SymbolStaticEx.TruestMessage)
}
SymbolStaticEx_TruestMessage::SymbolStaticEx_TruestMessage(const SymbolStaticEx_TruestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&asset_, &from.asset_,
    static_cast<size_t>(reinterpret_cast<char*>(&asset_date_) -
    reinterpret_cast<char*>(&asset_)) + sizeof(asset_date_));
  // @@protoc_insertion_point(copy_constructor:chaos_data.SymbolStaticEx.TruestMessage)
}

void SymbolStaticEx_TruestMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&asset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&asset_date_) -
      reinterpret_cast<char*>(&asset_)) + sizeof(asset_date_));
}

SymbolStaticEx_TruestMessage::~SymbolStaticEx_TruestMessage() {
  // @@protoc_insertion_point(destructor:chaos_data.SymbolStaticEx.TruestMessage)
  SharedDtor();
}

void SymbolStaticEx_TruestMessage::SharedDtor() {
}

void SymbolStaticEx_TruestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolStaticEx_TruestMessage::descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolStaticEx_TruestMessage& SymbolStaticEx_TruestMessage::default_instance() {
  protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolStaticEx_TruestMessage* SymbolStaticEx_TruestMessage::New(::google::protobuf::Arena* arena) const {
  SymbolStaticEx_TruestMessage* n = new SymbolStaticEx_TruestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolStaticEx_TruestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos_data.SymbolStaticEx.TruestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&asset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&asset_date_) -
        reinterpret_cast<char*>(&asset_)) + sizeof(asset_date_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolStaticEx_TruestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos_data.SymbolStaticEx.TruestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float asset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_asset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &asset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 asset_date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_asset_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asset_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos_data.SymbolStaticEx.TruestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos_data.SymbolStaticEx.TruestMessage)
  return false;
#undef DO_
}

void SymbolStaticEx_TruestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos_data.SymbolStaticEx.TruestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float asset = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->asset(), output);
  }

  // optional uint32 asset_date = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->asset_date(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos_data.SymbolStaticEx.TruestMessage)
}

::google::protobuf::uint8* SymbolStaticEx_TruestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chaos_data.SymbolStaticEx.TruestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float asset = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->asset(), target);
  }

  // optional uint32 asset_date = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->asset_date(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos_data.SymbolStaticEx.TruestMessage)
  return target;
}

size_t SymbolStaticEx_TruestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chaos_data.SymbolStaticEx.TruestMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional float asset = 3;
    if (has_asset()) {
      total_size += 1 + 4;
    }

    // optional uint32 asset_date = 4;
    if (has_asset_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asset_date());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolStaticEx_TruestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos_data.SymbolStaticEx.TruestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolStaticEx_TruestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolStaticEx_TruestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos_data.SymbolStaticEx.TruestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos_data.SymbolStaticEx.TruestMessage)
    MergeFrom(*source);
  }
}

void SymbolStaticEx_TruestMessage::MergeFrom(const SymbolStaticEx_TruestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos_data.SymbolStaticEx.TruestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      asset_ = from.asset_;
    }
    if (cached_has_bits & 0x00000002u) {
      asset_date_ = from.asset_date_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolStaticEx_TruestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos_data.SymbolStaticEx.TruestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolStaticEx_TruestMessage::CopyFrom(const SymbolStaticEx_TruestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos_data.SymbolStaticEx.TruestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolStaticEx_TruestMessage::IsInitialized() const {
  return true;
}

void SymbolStaticEx_TruestMessage::Swap(SymbolStaticEx_TruestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolStaticEx_TruestMessage::InternalSwap(SymbolStaticEx_TruestMessage* other) {
  using std::swap;
  swap(asset_, other->asset_);
  swap(asset_date_, other->asset_date_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolStaticEx_TruestMessage::GetMetadata() const {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolStaticEx_TruestMessage

// optional float asset = 3;
bool SymbolStaticEx_TruestMessage::has_asset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolStaticEx_TruestMessage::set_has_asset() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolStaticEx_TruestMessage::clear_has_asset() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolStaticEx_TruestMessage::clear_asset() {
  asset_ = 0;
  clear_has_asset();
}
float SymbolStaticEx_TruestMessage::asset() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.TruestMessage.asset)
  return asset_;
}
void SymbolStaticEx_TruestMessage::set_asset(float value) {
  set_has_asset();
  asset_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.TruestMessage.asset)
}

// optional uint32 asset_date = 4;
bool SymbolStaticEx_TruestMessage::has_asset_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolStaticEx_TruestMessage::set_has_asset_date() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolStaticEx_TruestMessage::clear_has_asset_date() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolStaticEx_TruestMessage::clear_asset_date() {
  asset_date_ = 0u;
  clear_has_asset_date();
}
::google::protobuf::uint32 SymbolStaticEx_TruestMessage::asset_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.TruestMessage.asset_date)
  return asset_date_;
}
void SymbolStaticEx_TruestMessage::set_asset_date(::google::protobuf::uint32 value) {
  set_has_asset_date();
  asset_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.TruestMessage.asset_date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolStaticEx_SpecMessage::kEquityFieldNumber;
const int SymbolStaticEx_SpecMessage::kFundFieldNumber;
const int SymbolStaticEx_SpecMessage::kWarranFieldNumber;
const int SymbolStaticEx_SpecMessage::kBoundFieldNumber;
const int SymbolStaticEx_SpecMessage::kCnvtFieldNumber;
const int SymbolStaticEx_SpecMessage::kFutureFieldNumber;
const int SymbolStaticEx_SpecMessage::kTruestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolStaticEx_SpecMessage::SymbolStaticEx_SpecMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos_data.SymbolStaticEx.SpecMessage)
}
SymbolStaticEx_SpecMessage::SymbolStaticEx_SpecMessage(const SymbolStaticEx_SpecMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_equity()) {
    equity_ = new ::chaos_data::SymbolStaticEx_EquityMessage(*from.equity_);
  } else {
    equity_ = NULL;
  }
  if (from.has_fund()) {
    fund_ = new ::chaos_data::SymbolStaticEx_FundMessage(*from.fund_);
  } else {
    fund_ = NULL;
  }
  if (from.has_warran()) {
    warran_ = new ::chaos_data::SymbolStaticEx_WarranMessage(*from.warran_);
  } else {
    warran_ = NULL;
  }
  if (from.has_bound()) {
    bound_ = new ::chaos_data::SymbolStaticEx_BoundMessage(*from.bound_);
  } else {
    bound_ = NULL;
  }
  if (from.has_cnvt()) {
    cnvt_ = new ::chaos_data::SymbolStaticEx_CNVTMessage(*from.cnvt_);
  } else {
    cnvt_ = NULL;
  }
  if (from.has_future()) {
    future_ = new ::chaos_data::SymbolStaticEx_FutureMessage(*from.future_);
  } else {
    future_ = NULL;
  }
  if (from.has_truest()) {
    truest_ = new ::chaos_data::SymbolStaticEx_TruestMessage(*from.truest_);
  } else {
    truest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:chaos_data.SymbolStaticEx.SpecMessage)
}

void SymbolStaticEx_SpecMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&equity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truest_) -
      reinterpret_cast<char*>(&equity_)) + sizeof(truest_));
}

SymbolStaticEx_SpecMessage::~SymbolStaticEx_SpecMessage() {
  // @@protoc_insertion_point(destructor:chaos_data.SymbolStaticEx.SpecMessage)
  SharedDtor();
}

void SymbolStaticEx_SpecMessage::SharedDtor() {
  if (this != internal_default_instance()) delete equity_;
  if (this != internal_default_instance()) delete fund_;
  if (this != internal_default_instance()) delete warran_;
  if (this != internal_default_instance()) delete bound_;
  if (this != internal_default_instance()) delete cnvt_;
  if (this != internal_default_instance()) delete future_;
  if (this != internal_default_instance()) delete truest_;
}

void SymbolStaticEx_SpecMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolStaticEx_SpecMessage::descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolStaticEx_SpecMessage& SymbolStaticEx_SpecMessage::default_instance() {
  protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolStaticEx_SpecMessage* SymbolStaticEx_SpecMessage::New(::google::protobuf::Arena* arena) const {
  SymbolStaticEx_SpecMessage* n = new SymbolStaticEx_SpecMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolStaticEx_SpecMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos_data.SymbolStaticEx.SpecMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(equity_ != NULL);
      equity_->::chaos_data::SymbolStaticEx_EquityMessage::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(fund_ != NULL);
      fund_->::chaos_data::SymbolStaticEx_FundMessage::Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(warran_ != NULL);
      warran_->::chaos_data::SymbolStaticEx_WarranMessage::Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(bound_ != NULL);
      bound_->::chaos_data::SymbolStaticEx_BoundMessage::Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(cnvt_ != NULL);
      cnvt_->::chaos_data::SymbolStaticEx_CNVTMessage::Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(future_ != NULL);
      future_->::chaos_data::SymbolStaticEx_FutureMessage::Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(truest_ != NULL);
      truest_->::chaos_data::SymbolStaticEx_TruestMessage::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolStaticEx_SpecMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos_data.SymbolStaticEx.SpecMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .chaos_data.SymbolStaticEx.EquityMessage equity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chaos_data.SymbolStaticEx.FundMessage fund = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fund()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chaos_data.SymbolStaticEx.WarranMessage warran = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_warran()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chaos_data.SymbolStaticEx.BoundMessage bound = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bound()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chaos_data.SymbolStaticEx.CNVTMessage cnvt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cnvt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chaos_data.SymbolStaticEx.FutureMessage future = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_future()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chaos_data.SymbolStaticEx.TruestMessage truest = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_truest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos_data.SymbolStaticEx.SpecMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos_data.SymbolStaticEx.SpecMessage)
  return false;
#undef DO_
}

void SymbolStaticEx_SpecMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos_data.SymbolStaticEx.SpecMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .chaos_data.SymbolStaticEx.EquityMessage equity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->equity_, output);
  }

  // optional .chaos_data.SymbolStaticEx.FundMessage fund = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->fund_, output);
  }

  // optional .chaos_data.SymbolStaticEx.WarranMessage warran = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->warran_, output);
  }

  // optional .chaos_data.SymbolStaticEx.BoundMessage bound = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->bound_, output);
  }

  // optional .chaos_data.SymbolStaticEx.CNVTMessage cnvt = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->cnvt_, output);
  }

  // optional .chaos_data.SymbolStaticEx.FutureMessage future = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->future_, output);
  }

  // optional .chaos_data.SymbolStaticEx.TruestMessage truest = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->truest_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos_data.SymbolStaticEx.SpecMessage)
}

::google::protobuf::uint8* SymbolStaticEx_SpecMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chaos_data.SymbolStaticEx.SpecMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .chaos_data.SymbolStaticEx.EquityMessage equity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->equity_, deterministic, target);
  }

  // optional .chaos_data.SymbolStaticEx.FundMessage fund = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->fund_, deterministic, target);
  }

  // optional .chaos_data.SymbolStaticEx.WarranMessage warran = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->warran_, deterministic, target);
  }

  // optional .chaos_data.SymbolStaticEx.BoundMessage bound = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->bound_, deterministic, target);
  }

  // optional .chaos_data.SymbolStaticEx.CNVTMessage cnvt = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->cnvt_, deterministic, target);
  }

  // optional .chaos_data.SymbolStaticEx.FutureMessage future = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->future_, deterministic, target);
  }

  // optional .chaos_data.SymbolStaticEx.TruestMessage truest = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->truest_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos_data.SymbolStaticEx.SpecMessage)
  return target;
}

size_t SymbolStaticEx_SpecMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chaos_data.SymbolStaticEx.SpecMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .chaos_data.SymbolStaticEx.EquityMessage equity = 1;
    if (has_equity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->equity_);
    }

    // optional .chaos_data.SymbolStaticEx.FundMessage fund = 2;
    if (has_fund()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->fund_);
    }

    // optional .chaos_data.SymbolStaticEx.WarranMessage warran = 3;
    if (has_warran()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->warran_);
    }

    // optional .chaos_data.SymbolStaticEx.BoundMessage bound = 4;
    if (has_bound()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bound_);
    }

    // optional .chaos_data.SymbolStaticEx.CNVTMessage cnvt = 5;
    if (has_cnvt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cnvt_);
    }

    // optional .chaos_data.SymbolStaticEx.FutureMessage future = 6;
    if (has_future()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->future_);
    }

    // optional .chaos_data.SymbolStaticEx.TruestMessage truest = 7;
    if (has_truest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->truest_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolStaticEx_SpecMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos_data.SymbolStaticEx.SpecMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolStaticEx_SpecMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolStaticEx_SpecMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos_data.SymbolStaticEx.SpecMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos_data.SymbolStaticEx.SpecMessage)
    MergeFrom(*source);
  }
}

void SymbolStaticEx_SpecMessage::MergeFrom(const SymbolStaticEx_SpecMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos_data.SymbolStaticEx.SpecMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_equity()->::chaos_data::SymbolStaticEx_EquityMessage::MergeFrom(from.equity());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_fund()->::chaos_data::SymbolStaticEx_FundMessage::MergeFrom(from.fund());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_warran()->::chaos_data::SymbolStaticEx_WarranMessage::MergeFrom(from.warran());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_bound()->::chaos_data::SymbolStaticEx_BoundMessage::MergeFrom(from.bound());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_cnvt()->::chaos_data::SymbolStaticEx_CNVTMessage::MergeFrom(from.cnvt());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_future()->::chaos_data::SymbolStaticEx_FutureMessage::MergeFrom(from.future());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_truest()->::chaos_data::SymbolStaticEx_TruestMessage::MergeFrom(from.truest());
    }
  }
}

void SymbolStaticEx_SpecMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos_data.SymbolStaticEx.SpecMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolStaticEx_SpecMessage::CopyFrom(const SymbolStaticEx_SpecMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos_data.SymbolStaticEx.SpecMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolStaticEx_SpecMessage::IsInitialized() const {
  return true;
}

void SymbolStaticEx_SpecMessage::Swap(SymbolStaticEx_SpecMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolStaticEx_SpecMessage::InternalSwap(SymbolStaticEx_SpecMessage* other) {
  using std::swap;
  swap(equity_, other->equity_);
  swap(fund_, other->fund_);
  swap(warran_, other->warran_);
  swap(bound_, other->bound_);
  swap(cnvt_, other->cnvt_);
  swap(future_, other->future_);
  swap(truest_, other->truest_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolStaticEx_SpecMessage::GetMetadata() const {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolStaticEx_SpecMessage

// optional .chaos_data.SymbolStaticEx.EquityMessage equity = 1;
bool SymbolStaticEx_SpecMessage::has_equity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolStaticEx_SpecMessage::set_has_equity() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolStaticEx_SpecMessage::clear_has_equity() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolStaticEx_SpecMessage::clear_equity() {
  if (equity_ != NULL) equity_->::chaos_data::SymbolStaticEx_EquityMessage::Clear();
  clear_has_equity();
}
const ::chaos_data::SymbolStaticEx_EquityMessage& SymbolStaticEx_SpecMessage::equity() const {
  const ::chaos_data::SymbolStaticEx_EquityMessage* p = equity_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.equity)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_EquityMessage*>(
      &::chaos_data::_SymbolStaticEx_EquityMessage_default_instance_);
}
::chaos_data::SymbolStaticEx_EquityMessage* SymbolStaticEx_SpecMessage::mutable_equity() {
  set_has_equity();
  if (equity_ == NULL) {
    equity_ = new ::chaos_data::SymbolStaticEx_EquityMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.equity)
  return equity_;
}
::chaos_data::SymbolStaticEx_EquityMessage* SymbolStaticEx_SpecMessage::release_equity() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.equity)
  clear_has_equity();
  ::chaos_data::SymbolStaticEx_EquityMessage* temp = equity_;
  equity_ = NULL;
  return temp;
}
void SymbolStaticEx_SpecMessage::set_allocated_equity(::chaos_data::SymbolStaticEx_EquityMessage* equity) {
  delete equity_;
  equity_ = equity;
  if (equity) {
    set_has_equity();
  } else {
    clear_has_equity();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.equity)
}

// optional .chaos_data.SymbolStaticEx.FundMessage fund = 2;
bool SymbolStaticEx_SpecMessage::has_fund() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolStaticEx_SpecMessage::set_has_fund() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolStaticEx_SpecMessage::clear_has_fund() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolStaticEx_SpecMessage::clear_fund() {
  if (fund_ != NULL) fund_->::chaos_data::SymbolStaticEx_FundMessage::Clear();
  clear_has_fund();
}
const ::chaos_data::SymbolStaticEx_FundMessage& SymbolStaticEx_SpecMessage::fund() const {
  const ::chaos_data::SymbolStaticEx_FundMessage* p = fund_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.fund)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_FundMessage*>(
      &::chaos_data::_SymbolStaticEx_FundMessage_default_instance_);
}
::chaos_data::SymbolStaticEx_FundMessage* SymbolStaticEx_SpecMessage::mutable_fund() {
  set_has_fund();
  if (fund_ == NULL) {
    fund_ = new ::chaos_data::SymbolStaticEx_FundMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.fund)
  return fund_;
}
::chaos_data::SymbolStaticEx_FundMessage* SymbolStaticEx_SpecMessage::release_fund() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.fund)
  clear_has_fund();
  ::chaos_data::SymbolStaticEx_FundMessage* temp = fund_;
  fund_ = NULL;
  return temp;
}
void SymbolStaticEx_SpecMessage::set_allocated_fund(::chaos_data::SymbolStaticEx_FundMessage* fund) {
  delete fund_;
  fund_ = fund;
  if (fund) {
    set_has_fund();
  } else {
    clear_has_fund();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.fund)
}

// optional .chaos_data.SymbolStaticEx.WarranMessage warran = 3;
bool SymbolStaticEx_SpecMessage::has_warran() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolStaticEx_SpecMessage::set_has_warran() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolStaticEx_SpecMessage::clear_has_warran() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolStaticEx_SpecMessage::clear_warran() {
  if (warran_ != NULL) warran_->::chaos_data::SymbolStaticEx_WarranMessage::Clear();
  clear_has_warran();
}
const ::chaos_data::SymbolStaticEx_WarranMessage& SymbolStaticEx_SpecMessage::warran() const {
  const ::chaos_data::SymbolStaticEx_WarranMessage* p = warran_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.warran)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_WarranMessage*>(
      &::chaos_data::_SymbolStaticEx_WarranMessage_default_instance_);
}
::chaos_data::SymbolStaticEx_WarranMessage* SymbolStaticEx_SpecMessage::mutable_warran() {
  set_has_warran();
  if (warran_ == NULL) {
    warran_ = new ::chaos_data::SymbolStaticEx_WarranMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.warran)
  return warran_;
}
::chaos_data::SymbolStaticEx_WarranMessage* SymbolStaticEx_SpecMessage::release_warran() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.warran)
  clear_has_warran();
  ::chaos_data::SymbolStaticEx_WarranMessage* temp = warran_;
  warran_ = NULL;
  return temp;
}
void SymbolStaticEx_SpecMessage::set_allocated_warran(::chaos_data::SymbolStaticEx_WarranMessage* warran) {
  delete warran_;
  warran_ = warran;
  if (warran) {
    set_has_warran();
  } else {
    clear_has_warran();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.warran)
}

// optional .chaos_data.SymbolStaticEx.BoundMessage bound = 4;
bool SymbolStaticEx_SpecMessage::has_bound() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SymbolStaticEx_SpecMessage::set_has_bound() {
  _has_bits_[0] |= 0x00000008u;
}
void SymbolStaticEx_SpecMessage::clear_has_bound() {
  _has_bits_[0] &= ~0x00000008u;
}
void SymbolStaticEx_SpecMessage::clear_bound() {
  if (bound_ != NULL) bound_->::chaos_data::SymbolStaticEx_BoundMessage::Clear();
  clear_has_bound();
}
const ::chaos_data::SymbolStaticEx_BoundMessage& SymbolStaticEx_SpecMessage::bound() const {
  const ::chaos_data::SymbolStaticEx_BoundMessage* p = bound_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.bound)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_BoundMessage*>(
      &::chaos_data::_SymbolStaticEx_BoundMessage_default_instance_);
}
::chaos_data::SymbolStaticEx_BoundMessage* SymbolStaticEx_SpecMessage::mutable_bound() {
  set_has_bound();
  if (bound_ == NULL) {
    bound_ = new ::chaos_data::SymbolStaticEx_BoundMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.bound)
  return bound_;
}
::chaos_data::SymbolStaticEx_BoundMessage* SymbolStaticEx_SpecMessage::release_bound() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.bound)
  clear_has_bound();
  ::chaos_data::SymbolStaticEx_BoundMessage* temp = bound_;
  bound_ = NULL;
  return temp;
}
void SymbolStaticEx_SpecMessage::set_allocated_bound(::chaos_data::SymbolStaticEx_BoundMessage* bound) {
  delete bound_;
  bound_ = bound;
  if (bound) {
    set_has_bound();
  } else {
    clear_has_bound();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.bound)
}

// optional .chaos_data.SymbolStaticEx.CNVTMessage cnvt = 5;
bool SymbolStaticEx_SpecMessage::has_cnvt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SymbolStaticEx_SpecMessage::set_has_cnvt() {
  _has_bits_[0] |= 0x00000010u;
}
void SymbolStaticEx_SpecMessage::clear_has_cnvt() {
  _has_bits_[0] &= ~0x00000010u;
}
void SymbolStaticEx_SpecMessage::clear_cnvt() {
  if (cnvt_ != NULL) cnvt_->::chaos_data::SymbolStaticEx_CNVTMessage::Clear();
  clear_has_cnvt();
}
const ::chaos_data::SymbolStaticEx_CNVTMessage& SymbolStaticEx_SpecMessage::cnvt() const {
  const ::chaos_data::SymbolStaticEx_CNVTMessage* p = cnvt_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.cnvt)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_CNVTMessage*>(
      &::chaos_data::_SymbolStaticEx_CNVTMessage_default_instance_);
}
::chaos_data::SymbolStaticEx_CNVTMessage* SymbolStaticEx_SpecMessage::mutable_cnvt() {
  set_has_cnvt();
  if (cnvt_ == NULL) {
    cnvt_ = new ::chaos_data::SymbolStaticEx_CNVTMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.cnvt)
  return cnvt_;
}
::chaos_data::SymbolStaticEx_CNVTMessage* SymbolStaticEx_SpecMessage::release_cnvt() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.cnvt)
  clear_has_cnvt();
  ::chaos_data::SymbolStaticEx_CNVTMessage* temp = cnvt_;
  cnvt_ = NULL;
  return temp;
}
void SymbolStaticEx_SpecMessage::set_allocated_cnvt(::chaos_data::SymbolStaticEx_CNVTMessage* cnvt) {
  delete cnvt_;
  cnvt_ = cnvt;
  if (cnvt) {
    set_has_cnvt();
  } else {
    clear_has_cnvt();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.cnvt)
}

// optional .chaos_data.SymbolStaticEx.FutureMessage future = 6;
bool SymbolStaticEx_SpecMessage::has_future() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SymbolStaticEx_SpecMessage::set_has_future() {
  _has_bits_[0] |= 0x00000020u;
}
void SymbolStaticEx_SpecMessage::clear_has_future() {
  _has_bits_[0] &= ~0x00000020u;
}
void SymbolStaticEx_SpecMessage::clear_future() {
  if (future_ != NULL) future_->::chaos_data::SymbolStaticEx_FutureMessage::Clear();
  clear_has_future();
}
const ::chaos_data::SymbolStaticEx_FutureMessage& SymbolStaticEx_SpecMessage::future() const {
  const ::chaos_data::SymbolStaticEx_FutureMessage* p = future_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.future)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_FutureMessage*>(
      &::chaos_data::_SymbolStaticEx_FutureMessage_default_instance_);
}
::chaos_data::SymbolStaticEx_FutureMessage* SymbolStaticEx_SpecMessage::mutable_future() {
  set_has_future();
  if (future_ == NULL) {
    future_ = new ::chaos_data::SymbolStaticEx_FutureMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.future)
  return future_;
}
::chaos_data::SymbolStaticEx_FutureMessage* SymbolStaticEx_SpecMessage::release_future() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.future)
  clear_has_future();
  ::chaos_data::SymbolStaticEx_FutureMessage* temp = future_;
  future_ = NULL;
  return temp;
}
void SymbolStaticEx_SpecMessage::set_allocated_future(::chaos_data::SymbolStaticEx_FutureMessage* future) {
  delete future_;
  future_ = future;
  if (future) {
    set_has_future();
  } else {
    clear_has_future();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.future)
}

// optional .chaos_data.SymbolStaticEx.TruestMessage truest = 7;
bool SymbolStaticEx_SpecMessage::has_truest() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SymbolStaticEx_SpecMessage::set_has_truest() {
  _has_bits_[0] |= 0x00000040u;
}
void SymbolStaticEx_SpecMessage::clear_has_truest() {
  _has_bits_[0] &= ~0x00000040u;
}
void SymbolStaticEx_SpecMessage::clear_truest() {
  if (truest_ != NULL) truest_->::chaos_data::SymbolStaticEx_TruestMessage::Clear();
  clear_has_truest();
}
const ::chaos_data::SymbolStaticEx_TruestMessage& SymbolStaticEx_SpecMessage::truest() const {
  const ::chaos_data::SymbolStaticEx_TruestMessage* p = truest_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.truest)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_TruestMessage*>(
      &::chaos_data::_SymbolStaticEx_TruestMessage_default_instance_);
}
::chaos_data::SymbolStaticEx_TruestMessage* SymbolStaticEx_SpecMessage::mutable_truest() {
  set_has_truest();
  if (truest_ == NULL) {
    truest_ = new ::chaos_data::SymbolStaticEx_TruestMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.truest)
  return truest_;
}
::chaos_data::SymbolStaticEx_TruestMessage* SymbolStaticEx_SpecMessage::release_truest() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.truest)
  clear_has_truest();
  ::chaos_data::SymbolStaticEx_TruestMessage* temp = truest_;
  truest_ = NULL;
  return temp;
}
void SymbolStaticEx_SpecMessage::set_allocated_truest(::chaos_data::SymbolStaticEx_TruestMessage* truest) {
  delete truest_;
  truest_ = truest;
  if (truest) {
    set_has_truest();
  } else {
    clear_has_truest();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.truest)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolStaticEx::kCtypeFieldNumber;
const int SymbolStaticEx::kCsubTypeFieldNumber;
const int SymbolStaticEx::kSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolStaticEx::SymbolStaticEx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos_data.SymbolStaticEx)
}
SymbolStaticEx::SymbolStaticEx(const SymbolStaticEx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spec()) {
    spec_ = new ::chaos_data::SymbolStaticEx_SpecMessage(*from.spec_);
  } else {
    spec_ = NULL;
  }
  ::memcpy(&ctype_, &from.ctype_,
    static_cast<size_t>(reinterpret_cast<char*>(&csub_type_) -
    reinterpret_cast<char*>(&ctype_)) + sizeof(csub_type_));
  // @@protoc_insertion_point(copy_constructor:chaos_data.SymbolStaticEx)
}

void SymbolStaticEx::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&spec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctype_) -
      reinterpret_cast<char*>(&spec_)) + sizeof(ctype_));
  csub_type_ = 1;
}

SymbolStaticEx::~SymbolStaticEx() {
  // @@protoc_insertion_point(destructor:chaos_data.SymbolStaticEx)
  SharedDtor();
}

void SymbolStaticEx::SharedDtor() {
  if (this != internal_default_instance()) delete spec_;
}

void SymbolStaticEx::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolStaticEx::descriptor() {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolStaticEx& SymbolStaticEx::default_instance() {
  protobuf_symbol_5fstaticex_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolStaticEx* SymbolStaticEx::New(::google::protobuf::Arena* arena) const {
  SymbolStaticEx* n = new SymbolStaticEx;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolStaticEx::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos_data.SymbolStaticEx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_spec()) {
    GOOGLE_DCHECK(spec_ != NULL);
    spec_->::chaos_data::SymbolStaticEx_SpecMessage::Clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ctype_ = 0;
    csub_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolStaticEx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos_data.SymbolStaticEx)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .chaos_data.SymbolStaticEx.SYMBOL_TYPE ctype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::chaos_data::SymbolStaticEx_SYMBOL_TYPE_IsValid(value)) {
            set_ctype(static_cast< ::chaos_data::SymbolStaticEx_SYMBOL_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chaos_data.SymbolStaticEx.SYMBOL_SUBTYPE csub_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE_IsValid(value)) {
            set_csub_type(static_cast< ::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chaos_data.SymbolStaticEx.SpecMessage spec = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos_data.SymbolStaticEx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos_data.SymbolStaticEx)
  return false;
#undef DO_
}

void SymbolStaticEx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos_data.SymbolStaticEx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .chaos_data.SymbolStaticEx.SYMBOL_TYPE ctype = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ctype(), output);
  }

  // optional .chaos_data.SymbolStaticEx.SYMBOL_SUBTYPE csub_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->csub_type(), output);
  }

  // optional .chaos_data.SymbolStaticEx.SpecMessage spec = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->spec_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos_data.SymbolStaticEx)
}

::google::protobuf::uint8* SymbolStaticEx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chaos_data.SymbolStaticEx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .chaos_data.SymbolStaticEx.SYMBOL_TYPE ctype = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ctype(), target);
  }

  // optional .chaos_data.SymbolStaticEx.SYMBOL_SUBTYPE csub_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->csub_type(), target);
  }

  // optional .chaos_data.SymbolStaticEx.SpecMessage spec = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->spec_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos_data.SymbolStaticEx)
  return target;
}

size_t SymbolStaticEx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chaos_data.SymbolStaticEx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .chaos_data.SymbolStaticEx.SpecMessage spec = 3;
    if (has_spec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->spec_);
    }

    // optional .chaos_data.SymbolStaticEx.SYMBOL_TYPE ctype = 1;
    if (has_ctype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctype());
    }

    // optional .chaos_data.SymbolStaticEx.SYMBOL_SUBTYPE csub_type = 2;
    if (has_csub_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->csub_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolStaticEx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos_data.SymbolStaticEx)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolStaticEx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolStaticEx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos_data.SymbolStaticEx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos_data.SymbolStaticEx)
    MergeFrom(*source);
  }
}

void SymbolStaticEx::MergeFrom(const SymbolStaticEx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos_data.SymbolStaticEx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_spec()->::chaos_data::SymbolStaticEx_SpecMessage::MergeFrom(from.spec());
    }
    if (cached_has_bits & 0x00000002u) {
      ctype_ = from.ctype_;
    }
    if (cached_has_bits & 0x00000004u) {
      csub_type_ = from.csub_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolStaticEx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos_data.SymbolStaticEx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolStaticEx::CopyFrom(const SymbolStaticEx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos_data.SymbolStaticEx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolStaticEx::IsInitialized() const {
  return true;
}

void SymbolStaticEx::Swap(SymbolStaticEx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolStaticEx::InternalSwap(SymbolStaticEx* other) {
  using std::swap;
  swap(spec_, other->spec_);
  swap(ctype_, other->ctype_);
  swap(csub_type_, other->csub_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolStaticEx::GetMetadata() const {
  protobuf_symbol_5fstaticex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_symbol_5fstaticex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolStaticEx

// optional .chaos_data.SymbolStaticEx.SYMBOL_TYPE ctype = 1;
bool SymbolStaticEx::has_ctype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolStaticEx::set_has_ctype() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolStaticEx::clear_has_ctype() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolStaticEx::clear_ctype() {
  ctype_ = 0;
  clear_has_ctype();
}
::chaos_data::SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::ctype() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.ctype)
  return static_cast< ::chaos_data::SymbolStaticEx_SYMBOL_TYPE >(ctype_);
}
void SymbolStaticEx::set_ctype(::chaos_data::SymbolStaticEx_SYMBOL_TYPE value) {
  assert(::chaos_data::SymbolStaticEx_SYMBOL_TYPE_IsValid(value));
  set_has_ctype();
  ctype_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.ctype)
}

// optional .chaos_data.SymbolStaticEx.SYMBOL_SUBTYPE csub_type = 2;
bool SymbolStaticEx::has_csub_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolStaticEx::set_has_csub_type() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolStaticEx::clear_has_csub_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolStaticEx::clear_csub_type() {
  csub_type_ = 1;
  clear_has_csub_type();
}
::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::csub_type() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.csub_type)
  return static_cast< ::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE >(csub_type_);
}
void SymbolStaticEx::set_csub_type(::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE value) {
  assert(::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE_IsValid(value));
  set_has_csub_type();
  csub_type_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.csub_type)
}

// optional .chaos_data.SymbolStaticEx.SpecMessage spec = 3;
bool SymbolStaticEx::has_spec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolStaticEx::set_has_spec() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolStaticEx::clear_has_spec() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolStaticEx::clear_spec() {
  if (spec_ != NULL) spec_->::chaos_data::SymbolStaticEx_SpecMessage::Clear();
  clear_has_spec();
}
const ::chaos_data::SymbolStaticEx_SpecMessage& SymbolStaticEx::spec() const {
  const ::chaos_data::SymbolStaticEx_SpecMessage* p = spec_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.spec)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_SpecMessage*>(
      &::chaos_data::_SymbolStaticEx_SpecMessage_default_instance_);
}
::chaos_data::SymbolStaticEx_SpecMessage* SymbolStaticEx::mutable_spec() {
  set_has_spec();
  if (spec_ == NULL) {
    spec_ = new ::chaos_data::SymbolStaticEx_SpecMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.spec)
  return spec_;
}
::chaos_data::SymbolStaticEx_SpecMessage* SymbolStaticEx::release_spec() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.spec)
  clear_has_spec();
  ::chaos_data::SymbolStaticEx_SpecMessage* temp = spec_;
  spec_ = NULL;
  return temp;
}
void SymbolStaticEx::set_allocated_spec(::chaos_data::SymbolStaticEx_SpecMessage* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    set_has_spec();
  } else {
    clear_has_spec();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.spec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace chaos_data

// @@protoc_insertion_point(global_scope)
