// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: symbol_staticex.proto

#ifndef PROTOBUF_symbol_5fstaticex_2eproto__INCLUDED
#define PROTOBUF_symbol_5fstaticex_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace chaos_data {
class SymbolStaticEx;
class SymbolStaticExDefaultTypeInternal;
extern SymbolStaticExDefaultTypeInternal _SymbolStaticEx_default_instance_;
class SymbolStaticEx_BoundMessage;
class SymbolStaticEx_BoundMessageDefaultTypeInternal;
extern SymbolStaticEx_BoundMessageDefaultTypeInternal _SymbolStaticEx_BoundMessage_default_instance_;
class SymbolStaticEx_CNVTMessage;
class SymbolStaticEx_CNVTMessageDefaultTypeInternal;
extern SymbolStaticEx_CNVTMessageDefaultTypeInternal _SymbolStaticEx_CNVTMessage_default_instance_;
class SymbolStaticEx_EquityMessage;
class SymbolStaticEx_EquityMessageDefaultTypeInternal;
extern SymbolStaticEx_EquityMessageDefaultTypeInternal _SymbolStaticEx_EquityMessage_default_instance_;
class SymbolStaticEx_FundMessage;
class SymbolStaticEx_FundMessageDefaultTypeInternal;
extern SymbolStaticEx_FundMessageDefaultTypeInternal _SymbolStaticEx_FundMessage_default_instance_;
class SymbolStaticEx_FutureMessage;
class SymbolStaticEx_FutureMessageDefaultTypeInternal;
extern SymbolStaticEx_FutureMessageDefaultTypeInternal _SymbolStaticEx_FutureMessage_default_instance_;
class SymbolStaticEx_SpecMessage;
class SymbolStaticEx_SpecMessageDefaultTypeInternal;
extern SymbolStaticEx_SpecMessageDefaultTypeInternal _SymbolStaticEx_SpecMessage_default_instance_;
class SymbolStaticEx_TruestMessage;
class SymbolStaticEx_TruestMessageDefaultTypeInternal;
extern SymbolStaticEx_TruestMessageDefaultTypeInternal _SymbolStaticEx_TruestMessage_default_instance_;
class SymbolStaticEx_WarranMessage;
class SymbolStaticEx_WarranMessageDefaultTypeInternal;
extern SymbolStaticEx_WarranMessageDefaultTypeInternal _SymbolStaticEx_WarranMessage_default_instance_;
}  // namespace chaos_data

namespace chaos_data {

namespace protobuf_symbol_5fstaticex_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_symbol_5fstaticex_2eproto

enum SymbolStaticEx_SYMBOL_SUBTYPE {
  SymbolStaticEx_SYMBOL_SUBTYPE_NILTYPE = 1,
  SymbolStaticEx_SYMBOL_SUBTYPE_ASHARE = 2,
  SymbolStaticEx_SYMBOL_SUBTYPE_BSHARE = 3,
  SymbolStaticEx_SYMBOL_SUBTYPE_GOV_BOND = 4,
  SymbolStaticEx_SYMBOL_SUBTYPE_ENT_BOND = 5,
  SymbolStaticEx_SYMBOL_SUBTYPE_FIN_BOND = 6
};
bool SymbolStaticEx_SYMBOL_SUBTYPE_IsValid(int value);
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx_SYMBOL_SUBTYPE_SYMBOL_SUBTYPE_MIN = SymbolStaticEx_SYMBOL_SUBTYPE_NILTYPE;
const SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx_SYMBOL_SUBTYPE_SYMBOL_SUBTYPE_MAX = SymbolStaticEx_SYMBOL_SUBTYPE_FIN_BOND;
const int SymbolStaticEx_SYMBOL_SUBTYPE_SYMBOL_SUBTYPE_ARRAYSIZE = SymbolStaticEx_SYMBOL_SUBTYPE_SYMBOL_SUBTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SymbolStaticEx_SYMBOL_SUBTYPE_descriptor();
inline const ::std::string& SymbolStaticEx_SYMBOL_SUBTYPE_Name(SymbolStaticEx_SYMBOL_SUBTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SymbolStaticEx_SYMBOL_SUBTYPE_descriptor(), value);
}
inline bool SymbolStaticEx_SYMBOL_SUBTYPE_Parse(
    const ::std::string& name, SymbolStaticEx_SYMBOL_SUBTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SymbolStaticEx_SYMBOL_SUBTYPE>(
    SymbolStaticEx_SYMBOL_SUBTYPE_descriptor(), name, value);
}
enum SymbolStaticEx_SYMBOL_SP {
  SymbolStaticEx_SYMBOL_SP_NULLSP = 1,
  SymbolStaticEx_SYMBOL_SP_NSP = 2,
  SymbolStaticEx_SYMBOL_SP_SSP = 3,
  SymbolStaticEx_SYMBOL_SP_PSP = 4,
  SymbolStaticEx_SYMBOL_SP_TSP = 5,
  SymbolStaticEx_SYMBOL_SP_LSP = 6,
  SymbolStaticEx_SYMBOL_SP_OSP = 7,
  SymbolStaticEx_SYMBOL_SP_FSP = 8,
  SymbolStaticEx_SYMBOL_SP_ESP = 9,
  SymbolStaticEx_SYMBOL_SP_ZSP = 10
};
bool SymbolStaticEx_SYMBOL_SP_IsValid(int value);
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx_SYMBOL_SP_SYMBOL_SP_MIN = SymbolStaticEx_SYMBOL_SP_NULLSP;
const SymbolStaticEx_SYMBOL_SP SymbolStaticEx_SYMBOL_SP_SYMBOL_SP_MAX = SymbolStaticEx_SYMBOL_SP_ZSP;
const int SymbolStaticEx_SYMBOL_SP_SYMBOL_SP_ARRAYSIZE = SymbolStaticEx_SYMBOL_SP_SYMBOL_SP_MAX + 1;

const ::google::protobuf::EnumDescriptor* SymbolStaticEx_SYMBOL_SP_descriptor();
inline const ::std::string& SymbolStaticEx_SYMBOL_SP_Name(SymbolStaticEx_SYMBOL_SP value) {
  return ::google::protobuf::internal::NameOfEnum(
    SymbolStaticEx_SYMBOL_SP_descriptor(), value);
}
inline bool SymbolStaticEx_SYMBOL_SP_Parse(
    const ::std::string& name, SymbolStaticEx_SYMBOL_SP* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SymbolStaticEx_SYMBOL_SP>(
    SymbolStaticEx_SYMBOL_SP_descriptor(), name, value);
}
enum SymbolStaticEx_SYMBOL_TYPE {
  SymbolStaticEx_SYMBOL_TYPE_INDEX = 0,
  SymbolStaticEx_SYMBOL_TYPE_STOCK = 1,
  SymbolStaticEx_SYMBOL_TYPE_FUND = 2,
  SymbolStaticEx_SYMBOL_TYPE_BOND = 3,
  SymbolStaticEx_SYMBOL_TYPE_OTHER_STOCK = 4,
  SymbolStaticEx_SYMBOL_TYPE_OPTION = 5,
  SymbolStaticEx_SYMBOL_TYPE_EXCHANGE = 6,
  SymbolStaticEx_SYMBOL_TYPE_FUTURE = 7,
  SymbolStaticEx_SYMBOL_TYPE_FTR_IDX = 8,
  SymbolStaticEx_SYMBOL_TYPE_RGZ = 9,
  SymbolStaticEx_SYMBOL_TYPE_ETF = 10,
  SymbolStaticEx_SYMBOL_TYPE_LOF = 11,
  SymbolStaticEx_SYMBOL_TYPE_COV_BOND = 12,
  SymbolStaticEx_SYMBOL_TYPE_TRUST = 13,
  SymbolStaticEx_SYMBOL_TYPE_WARRANT = 14,
  SymbolStaticEx_SYMBOL_TYPE_REPO = 15,
  SymbolStaticEx_SYMBOL_TYPE_COMM = 16
};
bool SymbolStaticEx_SYMBOL_TYPE_IsValid(int value);
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx_SYMBOL_TYPE_SYMBOL_TYPE_MIN = SymbolStaticEx_SYMBOL_TYPE_INDEX;
const SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx_SYMBOL_TYPE_SYMBOL_TYPE_MAX = SymbolStaticEx_SYMBOL_TYPE_COMM;
const int SymbolStaticEx_SYMBOL_TYPE_SYMBOL_TYPE_ARRAYSIZE = SymbolStaticEx_SYMBOL_TYPE_SYMBOL_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SymbolStaticEx_SYMBOL_TYPE_descriptor();
inline const ::std::string& SymbolStaticEx_SYMBOL_TYPE_Name(SymbolStaticEx_SYMBOL_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SymbolStaticEx_SYMBOL_TYPE_descriptor(), value);
}
inline bool SymbolStaticEx_SYMBOL_TYPE_Parse(
    const ::std::string& name, SymbolStaticEx_SYMBOL_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SymbolStaticEx_SYMBOL_TYPE>(
    SymbolStaticEx_SYMBOL_TYPE_descriptor(), name, value);
}
// ===================================================================

class SymbolStaticEx_EquityMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chaos_data.SymbolStaticEx.EquityMessage) */ {
 public:
  SymbolStaticEx_EquityMessage();
  virtual ~SymbolStaticEx_EquityMessage();

  SymbolStaticEx_EquityMessage(const SymbolStaticEx_EquityMessage& from);

  inline SymbolStaticEx_EquityMessage& operator=(const SymbolStaticEx_EquityMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolStaticEx_EquityMessage(SymbolStaticEx_EquityMessage&& from) noexcept
    : SymbolStaticEx_EquityMessage() {
    *this = ::std::move(from);
  }

  inline SymbolStaticEx_EquityMessage& operator=(SymbolStaticEx_EquityMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolStaticEx_EquityMessage& default_instance();

  static inline const SymbolStaticEx_EquityMessage* internal_default_instance() {
    return reinterpret_cast<const SymbolStaticEx_EquityMessage*>(
               &_SymbolStaticEx_EquityMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SymbolStaticEx_EquityMessage* other);
  friend void swap(SymbolStaticEx_EquityMessage& a, SymbolStaticEx_EquityMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolStaticEx_EquityMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolStaticEx_EquityMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolStaticEx_EquityMessage& from);
  void MergeFrom(const SymbolStaticEx_EquityMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolStaticEx_EquityMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float face_value = 1;
  bool has_face_value() const;
  void clear_face_value();
  static const int kFaceValueFieldNumber = 1;
  float face_value() const;
  void set_face_value(float value);

  // optional float total_issued = 2;
  bool has_total_issued() const;
  void clear_total_issued();
  static const int kTotalIssuedFieldNumber = 2;
  float total_issued() const;
  void set_total_issued(float value);

  // optional uint32 industry = 3;
  bool has_industry() const;
  void clear_industry();
  static const int kIndustryFieldNumber = 3;
  ::google::protobuf::uint32 industry() const;
  void set_industry(::google::protobuf::uint32 value);

  // optional int32 trade_status = 4;
  bool has_trade_status() const;
  void clear_trade_status();
  static const int kTradeStatusFieldNumber = 4;
  ::google::protobuf::int32 trade_status() const;
  void set_trade_status(::google::protobuf::int32 value);

  // optional float cash_dividend = 5;
  bool has_cash_dividend() const;
  void clear_cash_dividend();
  static const int kCashDividendFieldNumber = 5;
  float cash_dividend() const;
  void set_cash_dividend(float value);

  // optional uint32 last_tradedate = 7;
  bool has_last_tradedate() const;
  void clear_last_tradedate();
  static const int kLastTradedateFieldNumber = 7;
  ::google::protobuf::uint32 last_tradedate() const;
  void set_last_tradedate(::google::protobuf::uint32 value);

  // optional .chaos_data.SymbolStaticEx.SYMBOL_SP security_properties = 6;
  bool has_security_properties() const;
  void clear_security_properties();
  static const int kSecurityPropertiesFieldNumber = 6;
  ::chaos_data::SymbolStaticEx_SYMBOL_SP security_properties() const;
  void set_security_properties(::chaos_data::SymbolStaticEx_SYMBOL_SP value);

  // @@protoc_insertion_point(class_scope:chaos_data.SymbolStaticEx.EquityMessage)
 private:
  void set_has_face_value();
  void clear_has_face_value();
  void set_has_total_issued();
  void clear_has_total_issued();
  void set_has_industry();
  void clear_has_industry();
  void set_has_trade_status();
  void clear_has_trade_status();
  void set_has_cash_dividend();
  void clear_has_cash_dividend();
  void set_has_security_properties();
  void clear_has_security_properties();
  void set_has_last_tradedate();
  void clear_has_last_tradedate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float face_value_;
  float total_issued_;
  ::google::protobuf::uint32 industry_;
  ::google::protobuf::int32 trade_status_;
  float cash_dividend_;
  ::google::protobuf::uint32 last_tradedate_;
  int security_properties_;
  friend struct protobuf_symbol_5fstaticex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolStaticEx_FundMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chaos_data.SymbolStaticEx.FundMessage) */ {
 public:
  SymbolStaticEx_FundMessage();
  virtual ~SymbolStaticEx_FundMessage();

  SymbolStaticEx_FundMessage(const SymbolStaticEx_FundMessage& from);

  inline SymbolStaticEx_FundMessage& operator=(const SymbolStaticEx_FundMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolStaticEx_FundMessage(SymbolStaticEx_FundMessage&& from) noexcept
    : SymbolStaticEx_FundMessage() {
    *this = ::std::move(from);
  }

  inline SymbolStaticEx_FundMessage& operator=(SymbolStaticEx_FundMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolStaticEx_FundMessage& default_instance();

  static inline const SymbolStaticEx_FundMessage* internal_default_instance() {
    return reinterpret_cast<const SymbolStaticEx_FundMessage*>(
               &_SymbolStaticEx_FundMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SymbolStaticEx_FundMessage* other);
  friend void swap(SymbolStaticEx_FundMessage& a, SymbolStaticEx_FundMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolStaticEx_FundMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolStaticEx_FundMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolStaticEx_FundMessage& from);
  void MergeFrom(const SymbolStaticEx_FundMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolStaticEx_FundMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float face_value = 1;
  bool has_face_value() const;
  void clear_face_value();
  static const int kFaceValueFieldNumber = 1;
  float face_value() const;
  void set_face_value(float value);

  // optional float total_issued = 2;
  bool has_total_issued() const;
  void clear_total_issued();
  static const int kTotalIssuedFieldNumber = 2;
  float total_issued() const;
  void set_total_issued(float value);

  // optional float iopv = 3;
  bool has_iopv() const;
  void clear_iopv();
  static const int kIopvFieldNumber = 3;
  float iopv() const;
  void set_iopv(float value);

  // @@protoc_insertion_point(class_scope:chaos_data.SymbolStaticEx.FundMessage)
 private:
  void set_has_face_value();
  void clear_has_face_value();
  void set_has_total_issued();
  void clear_has_total_issued();
  void set_has_iopv();
  void clear_has_iopv();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float face_value_;
  float total_issued_;
  float iopv_;
  friend struct protobuf_symbol_5fstaticex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolStaticEx_WarranMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chaos_data.SymbolStaticEx.WarranMessage) */ {
 public:
  SymbolStaticEx_WarranMessage();
  virtual ~SymbolStaticEx_WarranMessage();

  SymbolStaticEx_WarranMessage(const SymbolStaticEx_WarranMessage& from);

  inline SymbolStaticEx_WarranMessage& operator=(const SymbolStaticEx_WarranMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolStaticEx_WarranMessage(SymbolStaticEx_WarranMessage&& from) noexcept
    : SymbolStaticEx_WarranMessage() {
    *this = ::std::move(from);
  }

  inline SymbolStaticEx_WarranMessage& operator=(SymbolStaticEx_WarranMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolStaticEx_WarranMessage& default_instance();

  static inline const SymbolStaticEx_WarranMessage* internal_default_instance() {
    return reinterpret_cast<const SymbolStaticEx_WarranMessage*>(
               &_SymbolStaticEx_WarranMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SymbolStaticEx_WarranMessage* other);
  friend void swap(SymbolStaticEx_WarranMessage& a, SymbolStaticEx_WarranMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolStaticEx_WarranMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolStaticEx_WarranMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolStaticEx_WarranMessage& from);
  void MergeFrom(const SymbolStaticEx_WarranMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolStaticEx_WarranMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes under_line = 6;
  bool has_under_line() const;
  void clear_under_line();
  static const int kUnderLineFieldNumber = 6;
  const ::std::string& under_line() const;
  void set_under_line(const ::std::string& value);
  #if LANG_CXX11
  void set_under_line(::std::string&& value);
  #endif
  void set_under_line(const char* value);
  void set_under_line(const void* value, size_t size);
  ::std::string* mutable_under_line();
  ::std::string* release_under_line();
  void set_allocated_under_line(::std::string* under_line);

  // optional int32 style = 1;
  bool has_style() const;
  void clear_style();
  static const int kStyleFieldNumber = 1;
  ::google::protobuf::int32 style() const;
  void set_style(::google::protobuf::int32 value);

  // optional int32 cp = 2;
  bool has_cp() const;
  void clear_cp();
  static const int kCpFieldNumber = 2;
  ::google::protobuf::int32 cp() const;
  void set_cp(::google::protobuf::int32 value);

  // optional float cnvt_ratio = 3;
  bool has_cnvt_ratio() const;
  void clear_cnvt_ratio();
  static const int kCnvtRatioFieldNumber = 3;
  float cnvt_ratio() const;
  void set_cnvt_ratio(float value);

  // optional float strike_price = 4;
  bool has_strike_price() const;
  void clear_strike_price();
  static const int kStrikePriceFieldNumber = 4;
  float strike_price() const;
  void set_strike_price(float value);

  // optional uint32 maturity_date = 5;
  bool has_maturity_date() const;
  void clear_maturity_date();
  static const int kMaturityDateFieldNumber = 5;
  ::google::protobuf::uint32 maturity_date() const;
  void set_maturity_date(::google::protobuf::uint32 value);

  // optional float balance = 7;
  bool has_balance() const;
  void clear_balance();
  static const int kBalanceFieldNumber = 7;
  float balance() const;
  void set_balance(float value);

  // @@protoc_insertion_point(class_scope:chaos_data.SymbolStaticEx.WarranMessage)
 private:
  void set_has_style();
  void clear_has_style();
  void set_has_cp();
  void clear_has_cp();
  void set_has_cnvt_ratio();
  void clear_has_cnvt_ratio();
  void set_has_strike_price();
  void clear_has_strike_price();
  void set_has_maturity_date();
  void clear_has_maturity_date();
  void set_has_under_line();
  void clear_has_under_line();
  void set_has_balance();
  void clear_has_balance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr under_line_;
  ::google::protobuf::int32 style_;
  ::google::protobuf::int32 cp_;
  float cnvt_ratio_;
  float strike_price_;
  ::google::protobuf::uint32 maturity_date_;
  float balance_;
  friend struct protobuf_symbol_5fstaticex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolStaticEx_BoundMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chaos_data.SymbolStaticEx.BoundMessage) */ {
 public:
  SymbolStaticEx_BoundMessage();
  virtual ~SymbolStaticEx_BoundMessage();

  SymbolStaticEx_BoundMessage(const SymbolStaticEx_BoundMessage& from);

  inline SymbolStaticEx_BoundMessage& operator=(const SymbolStaticEx_BoundMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolStaticEx_BoundMessage(SymbolStaticEx_BoundMessage&& from) noexcept
    : SymbolStaticEx_BoundMessage() {
    *this = ::std::move(from);
  }

  inline SymbolStaticEx_BoundMessage& operator=(SymbolStaticEx_BoundMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolStaticEx_BoundMessage& default_instance();

  static inline const SymbolStaticEx_BoundMessage* internal_default_instance() {
    return reinterpret_cast<const SymbolStaticEx_BoundMessage*>(
               &_SymbolStaticEx_BoundMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SymbolStaticEx_BoundMessage* other);
  friend void swap(SymbolStaticEx_BoundMessage& a, SymbolStaticEx_BoundMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolStaticEx_BoundMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolStaticEx_BoundMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolStaticEx_BoundMessage& from);
  void MergeFrom(const SymbolStaticEx_BoundMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolStaticEx_BoundMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 maturity_date = 1;
  bool has_maturity_date() const;
  void clear_maturity_date();
  static const int kMaturityDateFieldNumber = 1;
  ::google::protobuf::uint32 maturity_date() const;
  void set_maturity_date(::google::protobuf::uint32 value);

  // optional uint32 intaccru_date = 2;
  bool has_intaccru_date() const;
  void clear_intaccru_date();
  static const int kIntaccruDateFieldNumber = 2;
  ::google::protobuf::uint32 intaccru_date() const;
  void set_intaccru_date(::google::protobuf::uint32 value);

  // optional float isssue_price = 3;
  bool has_isssue_price() const;
  void clear_isssue_price();
  static const int kIsssuePriceFieldNumber = 3;
  float isssue_price() const;
  void set_isssue_price(float value);

  // optional float coupon_rate = 4;
  bool has_coupon_rate() const;
  void clear_coupon_rate();
  static const int kCouponRateFieldNumber = 4;
  float coupon_rate() const;
  void set_coupon_rate(float value);

  // optional float face_value = 5;
  bool has_face_value() const;
  void clear_face_value();
  static const int kFaceValueFieldNumber = 5;
  float face_value() const;
  void set_face_value(float value);

  // optional float accrued_int = 6;
  bool has_accrued_int() const;
  void clear_accrued_int();
  static const int kAccruedIntFieldNumber = 6;
  float accrued_int() const;
  void set_accrued_int(float value);

  // @@protoc_insertion_point(class_scope:chaos_data.SymbolStaticEx.BoundMessage)
 private:
  void set_has_maturity_date();
  void clear_has_maturity_date();
  void set_has_intaccru_date();
  void clear_has_intaccru_date();
  void set_has_isssue_price();
  void clear_has_isssue_price();
  void set_has_coupon_rate();
  void clear_has_coupon_rate();
  void set_has_face_value();
  void clear_has_face_value();
  void set_has_accrued_int();
  void clear_has_accrued_int();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 maturity_date_;
  ::google::protobuf::uint32 intaccru_date_;
  float isssue_price_;
  float coupon_rate_;
  float face_value_;
  float accrued_int_;
  friend struct protobuf_symbol_5fstaticex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolStaticEx_CNVTMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chaos_data.SymbolStaticEx.CNVTMessage) */ {
 public:
  SymbolStaticEx_CNVTMessage();
  virtual ~SymbolStaticEx_CNVTMessage();

  SymbolStaticEx_CNVTMessage(const SymbolStaticEx_CNVTMessage& from);

  inline SymbolStaticEx_CNVTMessage& operator=(const SymbolStaticEx_CNVTMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolStaticEx_CNVTMessage(SymbolStaticEx_CNVTMessage&& from) noexcept
    : SymbolStaticEx_CNVTMessage() {
    *this = ::std::move(from);
  }

  inline SymbolStaticEx_CNVTMessage& operator=(SymbolStaticEx_CNVTMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolStaticEx_CNVTMessage& default_instance();

  static inline const SymbolStaticEx_CNVTMessage* internal_default_instance() {
    return reinterpret_cast<const SymbolStaticEx_CNVTMessage*>(
               &_SymbolStaticEx_CNVTMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SymbolStaticEx_CNVTMessage* other);
  friend void swap(SymbolStaticEx_CNVTMessage& a, SymbolStaticEx_CNVTMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolStaticEx_CNVTMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolStaticEx_CNVTMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolStaticEx_CNVTMessage& from);
  void MergeFrom(const SymbolStaticEx_CNVTMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolStaticEx_CNVTMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes under_line = 6;
  bool has_under_line() const;
  void clear_under_line();
  static const int kUnderLineFieldNumber = 6;
  const ::std::string& under_line() const;
  void set_under_line(const ::std::string& value);
  #if LANG_CXX11
  void set_under_line(::std::string&& value);
  #endif
  void set_under_line(const char* value);
  void set_under_line(const void* value, size_t size);
  ::std::string* mutable_under_line();
  ::std::string* release_under_line();
  void set_allocated_under_line(::std::string* under_line);

  // optional int32 style = 1;
  bool has_style() const;
  void clear_style();
  static const int kStyleFieldNumber = 1;
  ::google::protobuf::int32 style() const;
  void set_style(::google::protobuf::int32 value);

  // optional int32 cp = 2;
  bool has_cp() const;
  void clear_cp();
  static const int kCpFieldNumber = 2;
  ::google::protobuf::int32 cp() const;
  void set_cp(::google::protobuf::int32 value);

  // optional float cnvt_ratio = 3;
  bool has_cnvt_ratio() const;
  void clear_cnvt_ratio();
  static const int kCnvtRatioFieldNumber = 3;
  float cnvt_ratio() const;
  void set_cnvt_ratio(float value);

  // optional float strike_price = 4;
  bool has_strike_price() const;
  void clear_strike_price();
  static const int kStrikePriceFieldNumber = 4;
  float strike_price() const;
  void set_strike_price(float value);

  // optional uint32 maturity_date = 5;
  bool has_maturity_date() const;
  void clear_maturity_date();
  static const int kMaturityDateFieldNumber = 5;
  ::google::protobuf::uint32 maturity_date() const;
  void set_maturity_date(::google::protobuf::uint32 value);

  // optional float accrued_int = 7;
  bool has_accrued_int() const;
  void clear_accrued_int();
  static const int kAccruedIntFieldNumber = 7;
  float accrued_int() const;
  void set_accrued_int(float value);

  // @@protoc_insertion_point(class_scope:chaos_data.SymbolStaticEx.CNVTMessage)
 private:
  void set_has_style();
  void clear_has_style();
  void set_has_cp();
  void clear_has_cp();
  void set_has_cnvt_ratio();
  void clear_has_cnvt_ratio();
  void set_has_strike_price();
  void clear_has_strike_price();
  void set_has_maturity_date();
  void clear_has_maturity_date();
  void set_has_under_line();
  void clear_has_under_line();
  void set_has_accrued_int();
  void clear_has_accrued_int();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr under_line_;
  ::google::protobuf::int32 style_;
  ::google::protobuf::int32 cp_;
  float cnvt_ratio_;
  float strike_price_;
  ::google::protobuf::uint32 maturity_date_;
  float accrued_int_;
  friend struct protobuf_symbol_5fstaticex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolStaticEx_FutureMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chaos_data.SymbolStaticEx.FutureMessage) */ {
 public:
  SymbolStaticEx_FutureMessage();
  virtual ~SymbolStaticEx_FutureMessage();

  SymbolStaticEx_FutureMessage(const SymbolStaticEx_FutureMessage& from);

  inline SymbolStaticEx_FutureMessage& operator=(const SymbolStaticEx_FutureMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolStaticEx_FutureMessage(SymbolStaticEx_FutureMessage&& from) noexcept
    : SymbolStaticEx_FutureMessage() {
    *this = ::std::move(from);
  }

  inline SymbolStaticEx_FutureMessage& operator=(SymbolStaticEx_FutureMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolStaticEx_FutureMessage& default_instance();

  static inline const SymbolStaticEx_FutureMessage* internal_default_instance() {
    return reinterpret_cast<const SymbolStaticEx_FutureMessage*>(
               &_SymbolStaticEx_FutureMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SymbolStaticEx_FutureMessage* other);
  friend void swap(SymbolStaticEx_FutureMessage& a, SymbolStaticEx_FutureMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolStaticEx_FutureMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolStaticEx_FutureMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolStaticEx_FutureMessage& from);
  void MergeFrom(const SymbolStaticEx_FutureMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolStaticEx_FutureMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 last_day_OI = 1;
  bool has_last_day_oi() const;
  void clear_last_day_oi();
  static const int kLastDayOIFieldNumber = 1;
  ::google::protobuf::uint32 last_day_oi() const;
  void set_last_day_oi(::google::protobuf::uint32 value);

  // optional float last_settle_price = 2;
  bool has_last_settle_price() const;
  void clear_last_settle_price();
  static const int kLastSettlePriceFieldNumber = 2;
  float last_settle_price() const;
  void set_last_settle_price(float value);

  // @@protoc_insertion_point(class_scope:chaos_data.SymbolStaticEx.FutureMessage)
 private:
  void set_has_last_day_oi();
  void clear_has_last_day_oi();
  void set_has_last_settle_price();
  void clear_has_last_settle_price();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 last_day_oi_;
  float last_settle_price_;
  friend struct protobuf_symbol_5fstaticex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolStaticEx_TruestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chaos_data.SymbolStaticEx.TruestMessage) */ {
 public:
  SymbolStaticEx_TruestMessage();
  virtual ~SymbolStaticEx_TruestMessage();

  SymbolStaticEx_TruestMessage(const SymbolStaticEx_TruestMessage& from);

  inline SymbolStaticEx_TruestMessage& operator=(const SymbolStaticEx_TruestMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolStaticEx_TruestMessage(SymbolStaticEx_TruestMessage&& from) noexcept
    : SymbolStaticEx_TruestMessage() {
    *this = ::std::move(from);
  }

  inline SymbolStaticEx_TruestMessage& operator=(SymbolStaticEx_TruestMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolStaticEx_TruestMessage& default_instance();

  static inline const SymbolStaticEx_TruestMessage* internal_default_instance() {
    return reinterpret_cast<const SymbolStaticEx_TruestMessage*>(
               &_SymbolStaticEx_TruestMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SymbolStaticEx_TruestMessage* other);
  friend void swap(SymbolStaticEx_TruestMessage& a, SymbolStaticEx_TruestMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolStaticEx_TruestMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolStaticEx_TruestMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolStaticEx_TruestMessage& from);
  void MergeFrom(const SymbolStaticEx_TruestMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolStaticEx_TruestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float asset = 3;
  bool has_asset() const;
  void clear_asset();
  static const int kAssetFieldNumber = 3;
  float asset() const;
  void set_asset(float value);

  // optional uint32 asset_date = 4;
  bool has_asset_date() const;
  void clear_asset_date();
  static const int kAssetDateFieldNumber = 4;
  ::google::protobuf::uint32 asset_date() const;
  void set_asset_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:chaos_data.SymbolStaticEx.TruestMessage)
 private:
  void set_has_asset();
  void clear_has_asset();
  void set_has_asset_date();
  void clear_has_asset_date();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float asset_;
  ::google::protobuf::uint32 asset_date_;
  friend struct protobuf_symbol_5fstaticex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolStaticEx_SpecMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chaos_data.SymbolStaticEx.SpecMessage) */ {
 public:
  SymbolStaticEx_SpecMessage();
  virtual ~SymbolStaticEx_SpecMessage();

  SymbolStaticEx_SpecMessage(const SymbolStaticEx_SpecMessage& from);

  inline SymbolStaticEx_SpecMessage& operator=(const SymbolStaticEx_SpecMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolStaticEx_SpecMessage(SymbolStaticEx_SpecMessage&& from) noexcept
    : SymbolStaticEx_SpecMessage() {
    *this = ::std::move(from);
  }

  inline SymbolStaticEx_SpecMessage& operator=(SymbolStaticEx_SpecMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolStaticEx_SpecMessage& default_instance();

  static inline const SymbolStaticEx_SpecMessage* internal_default_instance() {
    return reinterpret_cast<const SymbolStaticEx_SpecMessage*>(
               &_SymbolStaticEx_SpecMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SymbolStaticEx_SpecMessage* other);
  friend void swap(SymbolStaticEx_SpecMessage& a, SymbolStaticEx_SpecMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolStaticEx_SpecMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolStaticEx_SpecMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolStaticEx_SpecMessage& from);
  void MergeFrom(const SymbolStaticEx_SpecMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolStaticEx_SpecMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .chaos_data.SymbolStaticEx.EquityMessage equity = 1;
  bool has_equity() const;
  void clear_equity();
  static const int kEquityFieldNumber = 1;
  const ::chaos_data::SymbolStaticEx_EquityMessage& equity() const;
  ::chaos_data::SymbolStaticEx_EquityMessage* mutable_equity();
  ::chaos_data::SymbolStaticEx_EquityMessage* release_equity();
  void set_allocated_equity(::chaos_data::SymbolStaticEx_EquityMessage* equity);

  // optional .chaos_data.SymbolStaticEx.FundMessage fund = 2;
  bool has_fund() const;
  void clear_fund();
  static const int kFundFieldNumber = 2;
  const ::chaos_data::SymbolStaticEx_FundMessage& fund() const;
  ::chaos_data::SymbolStaticEx_FundMessage* mutable_fund();
  ::chaos_data::SymbolStaticEx_FundMessage* release_fund();
  void set_allocated_fund(::chaos_data::SymbolStaticEx_FundMessage* fund);

  // optional .chaos_data.SymbolStaticEx.WarranMessage warran = 3;
  bool has_warran() const;
  void clear_warran();
  static const int kWarranFieldNumber = 3;
  const ::chaos_data::SymbolStaticEx_WarranMessage& warran() const;
  ::chaos_data::SymbolStaticEx_WarranMessage* mutable_warran();
  ::chaos_data::SymbolStaticEx_WarranMessage* release_warran();
  void set_allocated_warran(::chaos_data::SymbolStaticEx_WarranMessage* warran);

  // optional .chaos_data.SymbolStaticEx.BoundMessage bound = 4;
  bool has_bound() const;
  void clear_bound();
  static const int kBoundFieldNumber = 4;
  const ::chaos_data::SymbolStaticEx_BoundMessage& bound() const;
  ::chaos_data::SymbolStaticEx_BoundMessage* mutable_bound();
  ::chaos_data::SymbolStaticEx_BoundMessage* release_bound();
  void set_allocated_bound(::chaos_data::SymbolStaticEx_BoundMessage* bound);

  // optional .chaos_data.SymbolStaticEx.CNVTMessage cnvt = 5;
  bool has_cnvt() const;
  void clear_cnvt();
  static const int kCnvtFieldNumber = 5;
  const ::chaos_data::SymbolStaticEx_CNVTMessage& cnvt() const;
  ::chaos_data::SymbolStaticEx_CNVTMessage* mutable_cnvt();
  ::chaos_data::SymbolStaticEx_CNVTMessage* release_cnvt();
  void set_allocated_cnvt(::chaos_data::SymbolStaticEx_CNVTMessage* cnvt);

  // optional .chaos_data.SymbolStaticEx.FutureMessage future = 6;
  bool has_future() const;
  void clear_future();
  static const int kFutureFieldNumber = 6;
  const ::chaos_data::SymbolStaticEx_FutureMessage& future() const;
  ::chaos_data::SymbolStaticEx_FutureMessage* mutable_future();
  ::chaos_data::SymbolStaticEx_FutureMessage* release_future();
  void set_allocated_future(::chaos_data::SymbolStaticEx_FutureMessage* future);

  // optional .chaos_data.SymbolStaticEx.TruestMessage truest = 7;
  bool has_truest() const;
  void clear_truest();
  static const int kTruestFieldNumber = 7;
  const ::chaos_data::SymbolStaticEx_TruestMessage& truest() const;
  ::chaos_data::SymbolStaticEx_TruestMessage* mutable_truest();
  ::chaos_data::SymbolStaticEx_TruestMessage* release_truest();
  void set_allocated_truest(::chaos_data::SymbolStaticEx_TruestMessage* truest);

  // @@protoc_insertion_point(class_scope:chaos_data.SymbolStaticEx.SpecMessage)
 private:
  void set_has_equity();
  void clear_has_equity();
  void set_has_fund();
  void clear_has_fund();
  void set_has_warran();
  void clear_has_warran();
  void set_has_bound();
  void clear_has_bound();
  void set_has_cnvt();
  void clear_has_cnvt();
  void set_has_future();
  void clear_has_future();
  void set_has_truest();
  void clear_has_truest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::chaos_data::SymbolStaticEx_EquityMessage* equity_;
  ::chaos_data::SymbolStaticEx_FundMessage* fund_;
  ::chaos_data::SymbolStaticEx_WarranMessage* warran_;
  ::chaos_data::SymbolStaticEx_BoundMessage* bound_;
  ::chaos_data::SymbolStaticEx_CNVTMessage* cnvt_;
  ::chaos_data::SymbolStaticEx_FutureMessage* future_;
  ::chaos_data::SymbolStaticEx_TruestMessage* truest_;
  friend struct protobuf_symbol_5fstaticex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolStaticEx : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chaos_data.SymbolStaticEx) */ {
 public:
  SymbolStaticEx();
  virtual ~SymbolStaticEx();

  SymbolStaticEx(const SymbolStaticEx& from);

  inline SymbolStaticEx& operator=(const SymbolStaticEx& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolStaticEx(SymbolStaticEx&& from) noexcept
    : SymbolStaticEx() {
    *this = ::std::move(from);
  }

  inline SymbolStaticEx& operator=(SymbolStaticEx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolStaticEx& default_instance();

  static inline const SymbolStaticEx* internal_default_instance() {
    return reinterpret_cast<const SymbolStaticEx*>(
               &_SymbolStaticEx_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SymbolStaticEx* other);
  friend void swap(SymbolStaticEx& a, SymbolStaticEx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolStaticEx* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolStaticEx* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolStaticEx& from);
  void MergeFrom(const SymbolStaticEx& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolStaticEx* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SymbolStaticEx_EquityMessage EquityMessage;
  typedef SymbolStaticEx_FundMessage FundMessage;
  typedef SymbolStaticEx_WarranMessage WarranMessage;
  typedef SymbolStaticEx_BoundMessage BoundMessage;
  typedef SymbolStaticEx_CNVTMessage CNVTMessage;
  typedef SymbolStaticEx_FutureMessage FutureMessage;
  typedef SymbolStaticEx_TruestMessage TruestMessage;
  typedef SymbolStaticEx_SpecMessage SpecMessage;

  typedef SymbolStaticEx_SYMBOL_SUBTYPE SYMBOL_SUBTYPE;
  static const SYMBOL_SUBTYPE NILTYPE =
    SymbolStaticEx_SYMBOL_SUBTYPE_NILTYPE;
  static const SYMBOL_SUBTYPE ASHARE =
    SymbolStaticEx_SYMBOL_SUBTYPE_ASHARE;
  static const SYMBOL_SUBTYPE BSHARE =
    SymbolStaticEx_SYMBOL_SUBTYPE_BSHARE;
  static const SYMBOL_SUBTYPE GOV_BOND =
    SymbolStaticEx_SYMBOL_SUBTYPE_GOV_BOND;
  static const SYMBOL_SUBTYPE ENT_BOND =
    SymbolStaticEx_SYMBOL_SUBTYPE_ENT_BOND;
  static const SYMBOL_SUBTYPE FIN_BOND =
    SymbolStaticEx_SYMBOL_SUBTYPE_FIN_BOND;
  static inline bool SYMBOL_SUBTYPE_IsValid(int value) {
    return SymbolStaticEx_SYMBOL_SUBTYPE_IsValid(value);
  }
  static const SYMBOL_SUBTYPE SYMBOL_SUBTYPE_MIN =
    SymbolStaticEx_SYMBOL_SUBTYPE_SYMBOL_SUBTYPE_MIN;
  static const SYMBOL_SUBTYPE SYMBOL_SUBTYPE_MAX =
    SymbolStaticEx_SYMBOL_SUBTYPE_SYMBOL_SUBTYPE_MAX;
  static const int SYMBOL_SUBTYPE_ARRAYSIZE =
    SymbolStaticEx_SYMBOL_SUBTYPE_SYMBOL_SUBTYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SYMBOL_SUBTYPE_descriptor() {
    return SymbolStaticEx_SYMBOL_SUBTYPE_descriptor();
  }
  static inline const ::std::string& SYMBOL_SUBTYPE_Name(SYMBOL_SUBTYPE value) {
    return SymbolStaticEx_SYMBOL_SUBTYPE_Name(value);
  }
  static inline bool SYMBOL_SUBTYPE_Parse(const ::std::string& name,
      SYMBOL_SUBTYPE* value) {
    return SymbolStaticEx_SYMBOL_SUBTYPE_Parse(name, value);
  }

  typedef SymbolStaticEx_SYMBOL_SP SYMBOL_SP;
  static const SYMBOL_SP NULLSP =
    SymbolStaticEx_SYMBOL_SP_NULLSP;
  static const SYMBOL_SP NSP =
    SymbolStaticEx_SYMBOL_SP_NSP;
  static const SYMBOL_SP SSP =
    SymbolStaticEx_SYMBOL_SP_SSP;
  static const SYMBOL_SP PSP =
    SymbolStaticEx_SYMBOL_SP_PSP;
  static const SYMBOL_SP TSP =
    SymbolStaticEx_SYMBOL_SP_TSP;
  static const SYMBOL_SP LSP =
    SymbolStaticEx_SYMBOL_SP_LSP;
  static const SYMBOL_SP OSP =
    SymbolStaticEx_SYMBOL_SP_OSP;
  static const SYMBOL_SP FSP =
    SymbolStaticEx_SYMBOL_SP_FSP;
  static const SYMBOL_SP ESP =
    SymbolStaticEx_SYMBOL_SP_ESP;
  static const SYMBOL_SP ZSP =
    SymbolStaticEx_SYMBOL_SP_ZSP;
  static inline bool SYMBOL_SP_IsValid(int value) {
    return SymbolStaticEx_SYMBOL_SP_IsValid(value);
  }
  static const SYMBOL_SP SYMBOL_SP_MIN =
    SymbolStaticEx_SYMBOL_SP_SYMBOL_SP_MIN;
  static const SYMBOL_SP SYMBOL_SP_MAX =
    SymbolStaticEx_SYMBOL_SP_SYMBOL_SP_MAX;
  static const int SYMBOL_SP_ARRAYSIZE =
    SymbolStaticEx_SYMBOL_SP_SYMBOL_SP_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SYMBOL_SP_descriptor() {
    return SymbolStaticEx_SYMBOL_SP_descriptor();
  }
  static inline const ::std::string& SYMBOL_SP_Name(SYMBOL_SP value) {
    return SymbolStaticEx_SYMBOL_SP_Name(value);
  }
  static inline bool SYMBOL_SP_Parse(const ::std::string& name,
      SYMBOL_SP* value) {
    return SymbolStaticEx_SYMBOL_SP_Parse(name, value);
  }

  typedef SymbolStaticEx_SYMBOL_TYPE SYMBOL_TYPE;
  static const SYMBOL_TYPE INDEX =
    SymbolStaticEx_SYMBOL_TYPE_INDEX;
  static const SYMBOL_TYPE STOCK =
    SymbolStaticEx_SYMBOL_TYPE_STOCK;
  static const SYMBOL_TYPE FUND =
    SymbolStaticEx_SYMBOL_TYPE_FUND;
  static const SYMBOL_TYPE BOND =
    SymbolStaticEx_SYMBOL_TYPE_BOND;
  static const SYMBOL_TYPE OTHER_STOCK =
    SymbolStaticEx_SYMBOL_TYPE_OTHER_STOCK;
  static const SYMBOL_TYPE OPTION =
    SymbolStaticEx_SYMBOL_TYPE_OPTION;
  static const SYMBOL_TYPE EXCHANGE =
    SymbolStaticEx_SYMBOL_TYPE_EXCHANGE;
  static const SYMBOL_TYPE FUTURE =
    SymbolStaticEx_SYMBOL_TYPE_FUTURE;
  static const SYMBOL_TYPE FTR_IDX =
    SymbolStaticEx_SYMBOL_TYPE_FTR_IDX;
  static const SYMBOL_TYPE RGZ =
    SymbolStaticEx_SYMBOL_TYPE_RGZ;
  static const SYMBOL_TYPE ETF =
    SymbolStaticEx_SYMBOL_TYPE_ETF;
  static const SYMBOL_TYPE LOF =
    SymbolStaticEx_SYMBOL_TYPE_LOF;
  static const SYMBOL_TYPE COV_BOND =
    SymbolStaticEx_SYMBOL_TYPE_COV_BOND;
  static const SYMBOL_TYPE TRUST =
    SymbolStaticEx_SYMBOL_TYPE_TRUST;
  static const SYMBOL_TYPE WARRANT =
    SymbolStaticEx_SYMBOL_TYPE_WARRANT;
  static const SYMBOL_TYPE REPO =
    SymbolStaticEx_SYMBOL_TYPE_REPO;
  static const SYMBOL_TYPE COMM =
    SymbolStaticEx_SYMBOL_TYPE_COMM;
  static inline bool SYMBOL_TYPE_IsValid(int value) {
    return SymbolStaticEx_SYMBOL_TYPE_IsValid(value);
  }
  static const SYMBOL_TYPE SYMBOL_TYPE_MIN =
    SymbolStaticEx_SYMBOL_TYPE_SYMBOL_TYPE_MIN;
  static const SYMBOL_TYPE SYMBOL_TYPE_MAX =
    SymbolStaticEx_SYMBOL_TYPE_SYMBOL_TYPE_MAX;
  static const int SYMBOL_TYPE_ARRAYSIZE =
    SymbolStaticEx_SYMBOL_TYPE_SYMBOL_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SYMBOL_TYPE_descriptor() {
    return SymbolStaticEx_SYMBOL_TYPE_descriptor();
  }
  static inline const ::std::string& SYMBOL_TYPE_Name(SYMBOL_TYPE value) {
    return SymbolStaticEx_SYMBOL_TYPE_Name(value);
  }
  static inline bool SYMBOL_TYPE_Parse(const ::std::string& name,
      SYMBOL_TYPE* value) {
    return SymbolStaticEx_SYMBOL_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .chaos_data.SymbolStaticEx.SpecMessage spec = 3;
  bool has_spec() const;
  void clear_spec();
  static const int kSpecFieldNumber = 3;
  const ::chaos_data::SymbolStaticEx_SpecMessage& spec() const;
  ::chaos_data::SymbolStaticEx_SpecMessage* mutable_spec();
  ::chaos_data::SymbolStaticEx_SpecMessage* release_spec();
  void set_allocated_spec(::chaos_data::SymbolStaticEx_SpecMessage* spec);

  // optional .chaos_data.SymbolStaticEx.SYMBOL_TYPE ctype = 1;
  bool has_ctype() const;
  void clear_ctype();
  static const int kCtypeFieldNumber = 1;
  ::chaos_data::SymbolStaticEx_SYMBOL_TYPE ctype() const;
  void set_ctype(::chaos_data::SymbolStaticEx_SYMBOL_TYPE value);

  // optional .chaos_data.SymbolStaticEx.SYMBOL_SUBTYPE csub_type = 2;
  bool has_csub_type() const;
  void clear_csub_type();
  static const int kCsubTypeFieldNumber = 2;
  ::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE csub_type() const;
  void set_csub_type(::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE value);

  // @@protoc_insertion_point(class_scope:chaos_data.SymbolStaticEx)
 private:
  void set_has_ctype();
  void clear_has_ctype();
  void set_has_csub_type();
  void clear_has_csub_type();
  void set_has_spec();
  void clear_has_spec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::chaos_data::SymbolStaticEx_SpecMessage* spec_;
  int ctype_;
  int csub_type_;
  friend struct protobuf_symbol_5fstaticex_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SymbolStaticEx_EquityMessage

// optional float face_value = 1;
inline bool SymbolStaticEx_EquityMessage::has_face_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolStaticEx_EquityMessage::set_has_face_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolStaticEx_EquityMessage::clear_has_face_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolStaticEx_EquityMessage::clear_face_value() {
  face_value_ = 0;
  clear_has_face_value();
}
inline float SymbolStaticEx_EquityMessage::face_value() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.face_value)
  return face_value_;
}
inline void SymbolStaticEx_EquityMessage::set_face_value(float value) {
  set_has_face_value();
  face_value_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.face_value)
}

// optional float total_issued = 2;
inline bool SymbolStaticEx_EquityMessage::has_total_issued() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolStaticEx_EquityMessage::set_has_total_issued() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolStaticEx_EquityMessage::clear_has_total_issued() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolStaticEx_EquityMessage::clear_total_issued() {
  total_issued_ = 0;
  clear_has_total_issued();
}
inline float SymbolStaticEx_EquityMessage::total_issued() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.total_issued)
  return total_issued_;
}
inline void SymbolStaticEx_EquityMessage::set_total_issued(float value) {
  set_has_total_issued();
  total_issued_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.total_issued)
}

// optional uint32 industry = 3;
inline bool SymbolStaticEx_EquityMessage::has_industry() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolStaticEx_EquityMessage::set_has_industry() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolStaticEx_EquityMessage::clear_has_industry() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolStaticEx_EquityMessage::clear_industry() {
  industry_ = 0u;
  clear_has_industry();
}
inline ::google::protobuf::uint32 SymbolStaticEx_EquityMessage::industry() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.industry)
  return industry_;
}
inline void SymbolStaticEx_EquityMessage::set_industry(::google::protobuf::uint32 value) {
  set_has_industry();
  industry_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.industry)
}

// optional int32 trade_status = 4;
inline bool SymbolStaticEx_EquityMessage::has_trade_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SymbolStaticEx_EquityMessage::set_has_trade_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SymbolStaticEx_EquityMessage::clear_has_trade_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SymbolStaticEx_EquityMessage::clear_trade_status() {
  trade_status_ = 0;
  clear_has_trade_status();
}
inline ::google::protobuf::int32 SymbolStaticEx_EquityMessage::trade_status() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.trade_status)
  return trade_status_;
}
inline void SymbolStaticEx_EquityMessage::set_trade_status(::google::protobuf::int32 value) {
  set_has_trade_status();
  trade_status_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.trade_status)
}

// optional float cash_dividend = 5;
inline bool SymbolStaticEx_EquityMessage::has_cash_dividend() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SymbolStaticEx_EquityMessage::set_has_cash_dividend() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SymbolStaticEx_EquityMessage::clear_has_cash_dividend() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SymbolStaticEx_EquityMessage::clear_cash_dividend() {
  cash_dividend_ = 0;
  clear_has_cash_dividend();
}
inline float SymbolStaticEx_EquityMessage::cash_dividend() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.cash_dividend)
  return cash_dividend_;
}
inline void SymbolStaticEx_EquityMessage::set_cash_dividend(float value) {
  set_has_cash_dividend();
  cash_dividend_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.cash_dividend)
}

// optional .chaos_data.SymbolStaticEx.SYMBOL_SP security_properties = 6;
inline bool SymbolStaticEx_EquityMessage::has_security_properties() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SymbolStaticEx_EquityMessage::set_has_security_properties() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SymbolStaticEx_EquityMessage::clear_has_security_properties() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SymbolStaticEx_EquityMessage::clear_security_properties() {
  security_properties_ = 1;
  clear_has_security_properties();
}
inline ::chaos_data::SymbolStaticEx_SYMBOL_SP SymbolStaticEx_EquityMessage::security_properties() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.security_properties)
  return static_cast< ::chaos_data::SymbolStaticEx_SYMBOL_SP >(security_properties_);
}
inline void SymbolStaticEx_EquityMessage::set_security_properties(::chaos_data::SymbolStaticEx_SYMBOL_SP value) {
  assert(::chaos_data::SymbolStaticEx_SYMBOL_SP_IsValid(value));
  set_has_security_properties();
  security_properties_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.security_properties)
}

// optional uint32 last_tradedate = 7;
inline bool SymbolStaticEx_EquityMessage::has_last_tradedate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SymbolStaticEx_EquityMessage::set_has_last_tradedate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SymbolStaticEx_EquityMessage::clear_has_last_tradedate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SymbolStaticEx_EquityMessage::clear_last_tradedate() {
  last_tradedate_ = 0u;
  clear_has_last_tradedate();
}
inline ::google::protobuf::uint32 SymbolStaticEx_EquityMessage::last_tradedate() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.EquityMessage.last_tradedate)
  return last_tradedate_;
}
inline void SymbolStaticEx_EquityMessage::set_last_tradedate(::google::protobuf::uint32 value) {
  set_has_last_tradedate();
  last_tradedate_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.EquityMessage.last_tradedate)
}

// -------------------------------------------------------------------

// SymbolStaticEx_FundMessage

// optional float face_value = 1;
inline bool SymbolStaticEx_FundMessage::has_face_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolStaticEx_FundMessage::set_has_face_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolStaticEx_FundMessage::clear_has_face_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolStaticEx_FundMessage::clear_face_value() {
  face_value_ = 0;
  clear_has_face_value();
}
inline float SymbolStaticEx_FundMessage::face_value() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FundMessage.face_value)
  return face_value_;
}
inline void SymbolStaticEx_FundMessage::set_face_value(float value) {
  set_has_face_value();
  face_value_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FundMessage.face_value)
}

// optional float total_issued = 2;
inline bool SymbolStaticEx_FundMessage::has_total_issued() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolStaticEx_FundMessage::set_has_total_issued() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolStaticEx_FundMessage::clear_has_total_issued() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolStaticEx_FundMessage::clear_total_issued() {
  total_issued_ = 0;
  clear_has_total_issued();
}
inline float SymbolStaticEx_FundMessage::total_issued() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FundMessage.total_issued)
  return total_issued_;
}
inline void SymbolStaticEx_FundMessage::set_total_issued(float value) {
  set_has_total_issued();
  total_issued_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FundMessage.total_issued)
}

// optional float iopv = 3;
inline bool SymbolStaticEx_FundMessage::has_iopv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolStaticEx_FundMessage::set_has_iopv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolStaticEx_FundMessage::clear_has_iopv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolStaticEx_FundMessage::clear_iopv() {
  iopv_ = 0;
  clear_has_iopv();
}
inline float SymbolStaticEx_FundMessage::iopv() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FundMessage.iopv)
  return iopv_;
}
inline void SymbolStaticEx_FundMessage::set_iopv(float value) {
  set_has_iopv();
  iopv_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FundMessage.iopv)
}

// -------------------------------------------------------------------

// SymbolStaticEx_WarranMessage

// optional int32 style = 1;
inline bool SymbolStaticEx_WarranMessage::has_style() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolStaticEx_WarranMessage::set_has_style() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolStaticEx_WarranMessage::clear_has_style() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolStaticEx_WarranMessage::clear_style() {
  style_ = 0;
  clear_has_style();
}
inline ::google::protobuf::int32 SymbolStaticEx_WarranMessage::style() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.style)
  return style_;
}
inline void SymbolStaticEx_WarranMessage::set_style(::google::protobuf::int32 value) {
  set_has_style();
  style_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.style)
}

// optional int32 cp = 2;
inline bool SymbolStaticEx_WarranMessage::has_cp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolStaticEx_WarranMessage::set_has_cp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolStaticEx_WarranMessage::clear_has_cp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolStaticEx_WarranMessage::clear_cp() {
  cp_ = 0;
  clear_has_cp();
}
inline ::google::protobuf::int32 SymbolStaticEx_WarranMessage::cp() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.cp)
  return cp_;
}
inline void SymbolStaticEx_WarranMessage::set_cp(::google::protobuf::int32 value) {
  set_has_cp();
  cp_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.cp)
}

// optional float cnvt_ratio = 3;
inline bool SymbolStaticEx_WarranMessage::has_cnvt_ratio() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SymbolStaticEx_WarranMessage::set_has_cnvt_ratio() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SymbolStaticEx_WarranMessage::clear_has_cnvt_ratio() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SymbolStaticEx_WarranMessage::clear_cnvt_ratio() {
  cnvt_ratio_ = 0;
  clear_has_cnvt_ratio();
}
inline float SymbolStaticEx_WarranMessage::cnvt_ratio() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.cnvt_ratio)
  return cnvt_ratio_;
}
inline void SymbolStaticEx_WarranMessage::set_cnvt_ratio(float value) {
  set_has_cnvt_ratio();
  cnvt_ratio_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.cnvt_ratio)
}

// optional float strike_price = 4;
inline bool SymbolStaticEx_WarranMessage::has_strike_price() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SymbolStaticEx_WarranMessage::set_has_strike_price() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SymbolStaticEx_WarranMessage::clear_has_strike_price() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SymbolStaticEx_WarranMessage::clear_strike_price() {
  strike_price_ = 0;
  clear_has_strike_price();
}
inline float SymbolStaticEx_WarranMessage::strike_price() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.strike_price)
  return strike_price_;
}
inline void SymbolStaticEx_WarranMessage::set_strike_price(float value) {
  set_has_strike_price();
  strike_price_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.strike_price)
}

// optional uint32 maturity_date = 5;
inline bool SymbolStaticEx_WarranMessage::has_maturity_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SymbolStaticEx_WarranMessage::set_has_maturity_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SymbolStaticEx_WarranMessage::clear_has_maturity_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SymbolStaticEx_WarranMessage::clear_maturity_date() {
  maturity_date_ = 0u;
  clear_has_maturity_date();
}
inline ::google::protobuf::uint32 SymbolStaticEx_WarranMessage::maturity_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.maturity_date)
  return maturity_date_;
}
inline void SymbolStaticEx_WarranMessage::set_maturity_date(::google::protobuf::uint32 value) {
  set_has_maturity_date();
  maturity_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.maturity_date)
}

// optional bytes under_line = 6;
inline bool SymbolStaticEx_WarranMessage::has_under_line() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolStaticEx_WarranMessage::set_has_under_line() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolStaticEx_WarranMessage::clear_has_under_line() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolStaticEx_WarranMessage::clear_under_line() {
  under_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_under_line();
}
inline const ::std::string& SymbolStaticEx_WarranMessage::under_line() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.under_line)
  return under_line_.GetNoArena();
}
inline void SymbolStaticEx_WarranMessage::set_under_line(const ::std::string& value) {
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}
#if LANG_CXX11
inline void SymbolStaticEx_WarranMessage::set_under_line(::std::string&& value) {
  set_has_under_line();
  under_line_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}
#endif
inline void SymbolStaticEx_WarranMessage::set_under_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}
inline void SymbolStaticEx_WarranMessage::set_under_line(const void* value, size_t size) {
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}
inline ::std::string* SymbolStaticEx_WarranMessage::mutable_under_line() {
  set_has_under_line();
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.WarranMessage.under_line)
  return under_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SymbolStaticEx_WarranMessage::release_under_line() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.WarranMessage.under_line)
  clear_has_under_line();
  return under_line_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SymbolStaticEx_WarranMessage::set_allocated_under_line(::std::string* under_line) {
  if (under_line != NULL) {
    set_has_under_line();
  } else {
    clear_has_under_line();
  }
  under_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), under_line);
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.WarranMessage.under_line)
}

// optional float balance = 7;
inline bool SymbolStaticEx_WarranMessage::has_balance() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SymbolStaticEx_WarranMessage::set_has_balance() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SymbolStaticEx_WarranMessage::clear_has_balance() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SymbolStaticEx_WarranMessage::clear_balance() {
  balance_ = 0;
  clear_has_balance();
}
inline float SymbolStaticEx_WarranMessage::balance() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.WarranMessage.balance)
  return balance_;
}
inline void SymbolStaticEx_WarranMessage::set_balance(float value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.WarranMessage.balance)
}

// -------------------------------------------------------------------

// SymbolStaticEx_BoundMessage

// optional uint32 maturity_date = 1;
inline bool SymbolStaticEx_BoundMessage::has_maturity_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolStaticEx_BoundMessage::set_has_maturity_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolStaticEx_BoundMessage::clear_has_maturity_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolStaticEx_BoundMessage::clear_maturity_date() {
  maturity_date_ = 0u;
  clear_has_maturity_date();
}
inline ::google::protobuf::uint32 SymbolStaticEx_BoundMessage::maturity_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.maturity_date)
  return maturity_date_;
}
inline void SymbolStaticEx_BoundMessage::set_maturity_date(::google::protobuf::uint32 value) {
  set_has_maturity_date();
  maturity_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.maturity_date)
}

// optional uint32 intaccru_date = 2;
inline bool SymbolStaticEx_BoundMessage::has_intaccru_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolStaticEx_BoundMessage::set_has_intaccru_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolStaticEx_BoundMessage::clear_has_intaccru_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolStaticEx_BoundMessage::clear_intaccru_date() {
  intaccru_date_ = 0u;
  clear_has_intaccru_date();
}
inline ::google::protobuf::uint32 SymbolStaticEx_BoundMessage::intaccru_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.intaccru_date)
  return intaccru_date_;
}
inline void SymbolStaticEx_BoundMessage::set_intaccru_date(::google::protobuf::uint32 value) {
  set_has_intaccru_date();
  intaccru_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.intaccru_date)
}

// optional float isssue_price = 3;
inline bool SymbolStaticEx_BoundMessage::has_isssue_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolStaticEx_BoundMessage::set_has_isssue_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolStaticEx_BoundMessage::clear_has_isssue_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolStaticEx_BoundMessage::clear_isssue_price() {
  isssue_price_ = 0;
  clear_has_isssue_price();
}
inline float SymbolStaticEx_BoundMessage::isssue_price() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.isssue_price)
  return isssue_price_;
}
inline void SymbolStaticEx_BoundMessage::set_isssue_price(float value) {
  set_has_isssue_price();
  isssue_price_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.isssue_price)
}

// optional float coupon_rate = 4;
inline bool SymbolStaticEx_BoundMessage::has_coupon_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SymbolStaticEx_BoundMessage::set_has_coupon_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SymbolStaticEx_BoundMessage::clear_has_coupon_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SymbolStaticEx_BoundMessage::clear_coupon_rate() {
  coupon_rate_ = 0;
  clear_has_coupon_rate();
}
inline float SymbolStaticEx_BoundMessage::coupon_rate() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.coupon_rate)
  return coupon_rate_;
}
inline void SymbolStaticEx_BoundMessage::set_coupon_rate(float value) {
  set_has_coupon_rate();
  coupon_rate_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.coupon_rate)
}

// optional float face_value = 5;
inline bool SymbolStaticEx_BoundMessage::has_face_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SymbolStaticEx_BoundMessage::set_has_face_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SymbolStaticEx_BoundMessage::clear_has_face_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SymbolStaticEx_BoundMessage::clear_face_value() {
  face_value_ = 0;
  clear_has_face_value();
}
inline float SymbolStaticEx_BoundMessage::face_value() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.face_value)
  return face_value_;
}
inline void SymbolStaticEx_BoundMessage::set_face_value(float value) {
  set_has_face_value();
  face_value_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.face_value)
}

// optional float accrued_int = 6;
inline bool SymbolStaticEx_BoundMessage::has_accrued_int() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SymbolStaticEx_BoundMessage::set_has_accrued_int() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SymbolStaticEx_BoundMessage::clear_has_accrued_int() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SymbolStaticEx_BoundMessage::clear_accrued_int() {
  accrued_int_ = 0;
  clear_has_accrued_int();
}
inline float SymbolStaticEx_BoundMessage::accrued_int() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.BoundMessage.accrued_int)
  return accrued_int_;
}
inline void SymbolStaticEx_BoundMessage::set_accrued_int(float value) {
  set_has_accrued_int();
  accrued_int_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.BoundMessage.accrued_int)
}

// -------------------------------------------------------------------

// SymbolStaticEx_CNVTMessage

// optional int32 style = 1;
inline bool SymbolStaticEx_CNVTMessage::has_style() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolStaticEx_CNVTMessage::set_has_style() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolStaticEx_CNVTMessage::clear_has_style() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolStaticEx_CNVTMessage::clear_style() {
  style_ = 0;
  clear_has_style();
}
inline ::google::protobuf::int32 SymbolStaticEx_CNVTMessage::style() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.style)
  return style_;
}
inline void SymbolStaticEx_CNVTMessage::set_style(::google::protobuf::int32 value) {
  set_has_style();
  style_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.style)
}

// optional int32 cp = 2;
inline bool SymbolStaticEx_CNVTMessage::has_cp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolStaticEx_CNVTMessage::set_has_cp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolStaticEx_CNVTMessage::clear_has_cp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolStaticEx_CNVTMessage::clear_cp() {
  cp_ = 0;
  clear_has_cp();
}
inline ::google::protobuf::int32 SymbolStaticEx_CNVTMessage::cp() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.cp)
  return cp_;
}
inline void SymbolStaticEx_CNVTMessage::set_cp(::google::protobuf::int32 value) {
  set_has_cp();
  cp_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.cp)
}

// optional float cnvt_ratio = 3;
inline bool SymbolStaticEx_CNVTMessage::has_cnvt_ratio() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SymbolStaticEx_CNVTMessage::set_has_cnvt_ratio() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SymbolStaticEx_CNVTMessage::clear_has_cnvt_ratio() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SymbolStaticEx_CNVTMessage::clear_cnvt_ratio() {
  cnvt_ratio_ = 0;
  clear_has_cnvt_ratio();
}
inline float SymbolStaticEx_CNVTMessage::cnvt_ratio() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.cnvt_ratio)
  return cnvt_ratio_;
}
inline void SymbolStaticEx_CNVTMessage::set_cnvt_ratio(float value) {
  set_has_cnvt_ratio();
  cnvt_ratio_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.cnvt_ratio)
}

// optional float strike_price = 4;
inline bool SymbolStaticEx_CNVTMessage::has_strike_price() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SymbolStaticEx_CNVTMessage::set_has_strike_price() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SymbolStaticEx_CNVTMessage::clear_has_strike_price() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SymbolStaticEx_CNVTMessage::clear_strike_price() {
  strike_price_ = 0;
  clear_has_strike_price();
}
inline float SymbolStaticEx_CNVTMessage::strike_price() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.strike_price)
  return strike_price_;
}
inline void SymbolStaticEx_CNVTMessage::set_strike_price(float value) {
  set_has_strike_price();
  strike_price_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.strike_price)
}

// optional uint32 maturity_date = 5;
inline bool SymbolStaticEx_CNVTMessage::has_maturity_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SymbolStaticEx_CNVTMessage::set_has_maturity_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SymbolStaticEx_CNVTMessage::clear_has_maturity_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SymbolStaticEx_CNVTMessage::clear_maturity_date() {
  maturity_date_ = 0u;
  clear_has_maturity_date();
}
inline ::google::protobuf::uint32 SymbolStaticEx_CNVTMessage::maturity_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.maturity_date)
  return maturity_date_;
}
inline void SymbolStaticEx_CNVTMessage::set_maturity_date(::google::protobuf::uint32 value) {
  set_has_maturity_date();
  maturity_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.maturity_date)
}

// optional bytes under_line = 6;
inline bool SymbolStaticEx_CNVTMessage::has_under_line() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolStaticEx_CNVTMessage::set_has_under_line() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolStaticEx_CNVTMessage::clear_has_under_line() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolStaticEx_CNVTMessage::clear_under_line() {
  under_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_under_line();
}
inline const ::std::string& SymbolStaticEx_CNVTMessage::under_line() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
  return under_line_.GetNoArena();
}
inline void SymbolStaticEx_CNVTMessage::set_under_line(const ::std::string& value) {
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}
#if LANG_CXX11
inline void SymbolStaticEx_CNVTMessage::set_under_line(::std::string&& value) {
  set_has_under_line();
  under_line_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}
#endif
inline void SymbolStaticEx_CNVTMessage::set_under_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}
inline void SymbolStaticEx_CNVTMessage::set_under_line(const void* value, size_t size) {
  set_has_under_line();
  under_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}
inline ::std::string* SymbolStaticEx_CNVTMessage::mutable_under_line() {
  set_has_under_line();
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
  return under_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SymbolStaticEx_CNVTMessage::release_under_line() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
  clear_has_under_line();
  return under_line_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SymbolStaticEx_CNVTMessage::set_allocated_under_line(::std::string* under_line) {
  if (under_line != NULL) {
    set_has_under_line();
  } else {
    clear_has_under_line();
  }
  under_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), under_line);
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.CNVTMessage.under_line)
}

// optional float accrued_int = 7;
inline bool SymbolStaticEx_CNVTMessage::has_accrued_int() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SymbolStaticEx_CNVTMessage::set_has_accrued_int() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SymbolStaticEx_CNVTMessage::clear_has_accrued_int() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SymbolStaticEx_CNVTMessage::clear_accrued_int() {
  accrued_int_ = 0;
  clear_has_accrued_int();
}
inline float SymbolStaticEx_CNVTMessage::accrued_int() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.CNVTMessage.accrued_int)
  return accrued_int_;
}
inline void SymbolStaticEx_CNVTMessage::set_accrued_int(float value) {
  set_has_accrued_int();
  accrued_int_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.CNVTMessage.accrued_int)
}

// -------------------------------------------------------------------

// SymbolStaticEx_FutureMessage

// optional uint32 last_day_OI = 1;
inline bool SymbolStaticEx_FutureMessage::has_last_day_oi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolStaticEx_FutureMessage::set_has_last_day_oi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolStaticEx_FutureMessage::clear_has_last_day_oi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolStaticEx_FutureMessage::clear_last_day_oi() {
  last_day_oi_ = 0u;
  clear_has_last_day_oi();
}
inline ::google::protobuf::uint32 SymbolStaticEx_FutureMessage::last_day_oi() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FutureMessage.last_day_OI)
  return last_day_oi_;
}
inline void SymbolStaticEx_FutureMessage::set_last_day_oi(::google::protobuf::uint32 value) {
  set_has_last_day_oi();
  last_day_oi_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FutureMessage.last_day_OI)
}

// optional float last_settle_price = 2;
inline bool SymbolStaticEx_FutureMessage::has_last_settle_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolStaticEx_FutureMessage::set_has_last_settle_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolStaticEx_FutureMessage::clear_has_last_settle_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolStaticEx_FutureMessage::clear_last_settle_price() {
  last_settle_price_ = 0;
  clear_has_last_settle_price();
}
inline float SymbolStaticEx_FutureMessage::last_settle_price() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.FutureMessage.last_settle_price)
  return last_settle_price_;
}
inline void SymbolStaticEx_FutureMessage::set_last_settle_price(float value) {
  set_has_last_settle_price();
  last_settle_price_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.FutureMessage.last_settle_price)
}

// -------------------------------------------------------------------

// SymbolStaticEx_TruestMessage

// optional float asset = 3;
inline bool SymbolStaticEx_TruestMessage::has_asset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolStaticEx_TruestMessage::set_has_asset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolStaticEx_TruestMessage::clear_has_asset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolStaticEx_TruestMessage::clear_asset() {
  asset_ = 0;
  clear_has_asset();
}
inline float SymbolStaticEx_TruestMessage::asset() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.TruestMessage.asset)
  return asset_;
}
inline void SymbolStaticEx_TruestMessage::set_asset(float value) {
  set_has_asset();
  asset_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.TruestMessage.asset)
}

// optional uint32 asset_date = 4;
inline bool SymbolStaticEx_TruestMessage::has_asset_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolStaticEx_TruestMessage::set_has_asset_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolStaticEx_TruestMessage::clear_has_asset_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolStaticEx_TruestMessage::clear_asset_date() {
  asset_date_ = 0u;
  clear_has_asset_date();
}
inline ::google::protobuf::uint32 SymbolStaticEx_TruestMessage::asset_date() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.TruestMessage.asset_date)
  return asset_date_;
}
inline void SymbolStaticEx_TruestMessage::set_asset_date(::google::protobuf::uint32 value) {
  set_has_asset_date();
  asset_date_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.TruestMessage.asset_date)
}

// -------------------------------------------------------------------

// SymbolStaticEx_SpecMessage

// optional .chaos_data.SymbolStaticEx.EquityMessage equity = 1;
inline bool SymbolStaticEx_SpecMessage::has_equity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolStaticEx_SpecMessage::set_has_equity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolStaticEx_SpecMessage::clear_has_equity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolStaticEx_SpecMessage::clear_equity() {
  if (equity_ != NULL) equity_->::chaos_data::SymbolStaticEx_EquityMessage::Clear();
  clear_has_equity();
}
inline const ::chaos_data::SymbolStaticEx_EquityMessage& SymbolStaticEx_SpecMessage::equity() const {
  const ::chaos_data::SymbolStaticEx_EquityMessage* p = equity_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.equity)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_EquityMessage*>(
      &::chaos_data::_SymbolStaticEx_EquityMessage_default_instance_);
}
inline ::chaos_data::SymbolStaticEx_EquityMessage* SymbolStaticEx_SpecMessage::mutable_equity() {
  set_has_equity();
  if (equity_ == NULL) {
    equity_ = new ::chaos_data::SymbolStaticEx_EquityMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.equity)
  return equity_;
}
inline ::chaos_data::SymbolStaticEx_EquityMessage* SymbolStaticEx_SpecMessage::release_equity() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.equity)
  clear_has_equity();
  ::chaos_data::SymbolStaticEx_EquityMessage* temp = equity_;
  equity_ = NULL;
  return temp;
}
inline void SymbolStaticEx_SpecMessage::set_allocated_equity(::chaos_data::SymbolStaticEx_EquityMessage* equity) {
  delete equity_;
  equity_ = equity;
  if (equity) {
    set_has_equity();
  } else {
    clear_has_equity();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.equity)
}

// optional .chaos_data.SymbolStaticEx.FundMessage fund = 2;
inline bool SymbolStaticEx_SpecMessage::has_fund() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolStaticEx_SpecMessage::set_has_fund() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolStaticEx_SpecMessage::clear_has_fund() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolStaticEx_SpecMessage::clear_fund() {
  if (fund_ != NULL) fund_->::chaos_data::SymbolStaticEx_FundMessage::Clear();
  clear_has_fund();
}
inline const ::chaos_data::SymbolStaticEx_FundMessage& SymbolStaticEx_SpecMessage::fund() const {
  const ::chaos_data::SymbolStaticEx_FundMessage* p = fund_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.fund)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_FundMessage*>(
      &::chaos_data::_SymbolStaticEx_FundMessage_default_instance_);
}
inline ::chaos_data::SymbolStaticEx_FundMessage* SymbolStaticEx_SpecMessage::mutable_fund() {
  set_has_fund();
  if (fund_ == NULL) {
    fund_ = new ::chaos_data::SymbolStaticEx_FundMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.fund)
  return fund_;
}
inline ::chaos_data::SymbolStaticEx_FundMessage* SymbolStaticEx_SpecMessage::release_fund() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.fund)
  clear_has_fund();
  ::chaos_data::SymbolStaticEx_FundMessage* temp = fund_;
  fund_ = NULL;
  return temp;
}
inline void SymbolStaticEx_SpecMessage::set_allocated_fund(::chaos_data::SymbolStaticEx_FundMessage* fund) {
  delete fund_;
  fund_ = fund;
  if (fund) {
    set_has_fund();
  } else {
    clear_has_fund();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.fund)
}

// optional .chaos_data.SymbolStaticEx.WarranMessage warran = 3;
inline bool SymbolStaticEx_SpecMessage::has_warran() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolStaticEx_SpecMessage::set_has_warran() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolStaticEx_SpecMessage::clear_has_warran() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolStaticEx_SpecMessage::clear_warran() {
  if (warran_ != NULL) warran_->::chaos_data::SymbolStaticEx_WarranMessage::Clear();
  clear_has_warran();
}
inline const ::chaos_data::SymbolStaticEx_WarranMessage& SymbolStaticEx_SpecMessage::warran() const {
  const ::chaos_data::SymbolStaticEx_WarranMessage* p = warran_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.warran)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_WarranMessage*>(
      &::chaos_data::_SymbolStaticEx_WarranMessage_default_instance_);
}
inline ::chaos_data::SymbolStaticEx_WarranMessage* SymbolStaticEx_SpecMessage::mutable_warran() {
  set_has_warran();
  if (warran_ == NULL) {
    warran_ = new ::chaos_data::SymbolStaticEx_WarranMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.warran)
  return warran_;
}
inline ::chaos_data::SymbolStaticEx_WarranMessage* SymbolStaticEx_SpecMessage::release_warran() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.warran)
  clear_has_warran();
  ::chaos_data::SymbolStaticEx_WarranMessage* temp = warran_;
  warran_ = NULL;
  return temp;
}
inline void SymbolStaticEx_SpecMessage::set_allocated_warran(::chaos_data::SymbolStaticEx_WarranMessage* warran) {
  delete warran_;
  warran_ = warran;
  if (warran) {
    set_has_warran();
  } else {
    clear_has_warran();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.warran)
}

// optional .chaos_data.SymbolStaticEx.BoundMessage bound = 4;
inline bool SymbolStaticEx_SpecMessage::has_bound() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SymbolStaticEx_SpecMessage::set_has_bound() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SymbolStaticEx_SpecMessage::clear_has_bound() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SymbolStaticEx_SpecMessage::clear_bound() {
  if (bound_ != NULL) bound_->::chaos_data::SymbolStaticEx_BoundMessage::Clear();
  clear_has_bound();
}
inline const ::chaos_data::SymbolStaticEx_BoundMessage& SymbolStaticEx_SpecMessage::bound() const {
  const ::chaos_data::SymbolStaticEx_BoundMessage* p = bound_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.bound)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_BoundMessage*>(
      &::chaos_data::_SymbolStaticEx_BoundMessage_default_instance_);
}
inline ::chaos_data::SymbolStaticEx_BoundMessage* SymbolStaticEx_SpecMessage::mutable_bound() {
  set_has_bound();
  if (bound_ == NULL) {
    bound_ = new ::chaos_data::SymbolStaticEx_BoundMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.bound)
  return bound_;
}
inline ::chaos_data::SymbolStaticEx_BoundMessage* SymbolStaticEx_SpecMessage::release_bound() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.bound)
  clear_has_bound();
  ::chaos_data::SymbolStaticEx_BoundMessage* temp = bound_;
  bound_ = NULL;
  return temp;
}
inline void SymbolStaticEx_SpecMessage::set_allocated_bound(::chaos_data::SymbolStaticEx_BoundMessage* bound) {
  delete bound_;
  bound_ = bound;
  if (bound) {
    set_has_bound();
  } else {
    clear_has_bound();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.bound)
}

// optional .chaos_data.SymbolStaticEx.CNVTMessage cnvt = 5;
inline bool SymbolStaticEx_SpecMessage::has_cnvt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SymbolStaticEx_SpecMessage::set_has_cnvt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SymbolStaticEx_SpecMessage::clear_has_cnvt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SymbolStaticEx_SpecMessage::clear_cnvt() {
  if (cnvt_ != NULL) cnvt_->::chaos_data::SymbolStaticEx_CNVTMessage::Clear();
  clear_has_cnvt();
}
inline const ::chaos_data::SymbolStaticEx_CNVTMessage& SymbolStaticEx_SpecMessage::cnvt() const {
  const ::chaos_data::SymbolStaticEx_CNVTMessage* p = cnvt_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.cnvt)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_CNVTMessage*>(
      &::chaos_data::_SymbolStaticEx_CNVTMessage_default_instance_);
}
inline ::chaos_data::SymbolStaticEx_CNVTMessage* SymbolStaticEx_SpecMessage::mutable_cnvt() {
  set_has_cnvt();
  if (cnvt_ == NULL) {
    cnvt_ = new ::chaos_data::SymbolStaticEx_CNVTMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.cnvt)
  return cnvt_;
}
inline ::chaos_data::SymbolStaticEx_CNVTMessage* SymbolStaticEx_SpecMessage::release_cnvt() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.cnvt)
  clear_has_cnvt();
  ::chaos_data::SymbolStaticEx_CNVTMessage* temp = cnvt_;
  cnvt_ = NULL;
  return temp;
}
inline void SymbolStaticEx_SpecMessage::set_allocated_cnvt(::chaos_data::SymbolStaticEx_CNVTMessage* cnvt) {
  delete cnvt_;
  cnvt_ = cnvt;
  if (cnvt) {
    set_has_cnvt();
  } else {
    clear_has_cnvt();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.cnvt)
}

// optional .chaos_data.SymbolStaticEx.FutureMessage future = 6;
inline bool SymbolStaticEx_SpecMessage::has_future() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SymbolStaticEx_SpecMessage::set_has_future() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SymbolStaticEx_SpecMessage::clear_has_future() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SymbolStaticEx_SpecMessage::clear_future() {
  if (future_ != NULL) future_->::chaos_data::SymbolStaticEx_FutureMessage::Clear();
  clear_has_future();
}
inline const ::chaos_data::SymbolStaticEx_FutureMessage& SymbolStaticEx_SpecMessage::future() const {
  const ::chaos_data::SymbolStaticEx_FutureMessage* p = future_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.future)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_FutureMessage*>(
      &::chaos_data::_SymbolStaticEx_FutureMessage_default_instance_);
}
inline ::chaos_data::SymbolStaticEx_FutureMessage* SymbolStaticEx_SpecMessage::mutable_future() {
  set_has_future();
  if (future_ == NULL) {
    future_ = new ::chaos_data::SymbolStaticEx_FutureMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.future)
  return future_;
}
inline ::chaos_data::SymbolStaticEx_FutureMessage* SymbolStaticEx_SpecMessage::release_future() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.future)
  clear_has_future();
  ::chaos_data::SymbolStaticEx_FutureMessage* temp = future_;
  future_ = NULL;
  return temp;
}
inline void SymbolStaticEx_SpecMessage::set_allocated_future(::chaos_data::SymbolStaticEx_FutureMessage* future) {
  delete future_;
  future_ = future;
  if (future) {
    set_has_future();
  } else {
    clear_has_future();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.future)
}

// optional .chaos_data.SymbolStaticEx.TruestMessage truest = 7;
inline bool SymbolStaticEx_SpecMessage::has_truest() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SymbolStaticEx_SpecMessage::set_has_truest() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SymbolStaticEx_SpecMessage::clear_has_truest() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SymbolStaticEx_SpecMessage::clear_truest() {
  if (truest_ != NULL) truest_->::chaos_data::SymbolStaticEx_TruestMessage::Clear();
  clear_has_truest();
}
inline const ::chaos_data::SymbolStaticEx_TruestMessage& SymbolStaticEx_SpecMessage::truest() const {
  const ::chaos_data::SymbolStaticEx_TruestMessage* p = truest_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.SpecMessage.truest)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_TruestMessage*>(
      &::chaos_data::_SymbolStaticEx_TruestMessage_default_instance_);
}
inline ::chaos_data::SymbolStaticEx_TruestMessage* SymbolStaticEx_SpecMessage::mutable_truest() {
  set_has_truest();
  if (truest_ == NULL) {
    truest_ = new ::chaos_data::SymbolStaticEx_TruestMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.SpecMessage.truest)
  return truest_;
}
inline ::chaos_data::SymbolStaticEx_TruestMessage* SymbolStaticEx_SpecMessage::release_truest() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.SpecMessage.truest)
  clear_has_truest();
  ::chaos_data::SymbolStaticEx_TruestMessage* temp = truest_;
  truest_ = NULL;
  return temp;
}
inline void SymbolStaticEx_SpecMessage::set_allocated_truest(::chaos_data::SymbolStaticEx_TruestMessage* truest) {
  delete truest_;
  truest_ = truest;
  if (truest) {
    set_has_truest();
  } else {
    clear_has_truest();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.SpecMessage.truest)
}

// -------------------------------------------------------------------

// SymbolStaticEx

// optional .chaos_data.SymbolStaticEx.SYMBOL_TYPE ctype = 1;
inline bool SymbolStaticEx::has_ctype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolStaticEx::set_has_ctype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolStaticEx::clear_has_ctype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolStaticEx::clear_ctype() {
  ctype_ = 0;
  clear_has_ctype();
}
inline ::chaos_data::SymbolStaticEx_SYMBOL_TYPE SymbolStaticEx::ctype() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.ctype)
  return static_cast< ::chaos_data::SymbolStaticEx_SYMBOL_TYPE >(ctype_);
}
inline void SymbolStaticEx::set_ctype(::chaos_data::SymbolStaticEx_SYMBOL_TYPE value) {
  assert(::chaos_data::SymbolStaticEx_SYMBOL_TYPE_IsValid(value));
  set_has_ctype();
  ctype_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.ctype)
}

// optional .chaos_data.SymbolStaticEx.SYMBOL_SUBTYPE csub_type = 2;
inline bool SymbolStaticEx::has_csub_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolStaticEx::set_has_csub_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolStaticEx::clear_has_csub_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolStaticEx::clear_csub_type() {
  csub_type_ = 1;
  clear_has_csub_type();
}
inline ::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE SymbolStaticEx::csub_type() const {
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.csub_type)
  return static_cast< ::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE >(csub_type_);
}
inline void SymbolStaticEx::set_csub_type(::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE value) {
  assert(::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE_IsValid(value));
  set_has_csub_type();
  csub_type_ = value;
  // @@protoc_insertion_point(field_set:chaos_data.SymbolStaticEx.csub_type)
}

// optional .chaos_data.SymbolStaticEx.SpecMessage spec = 3;
inline bool SymbolStaticEx::has_spec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolStaticEx::set_has_spec() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolStaticEx::clear_has_spec() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolStaticEx::clear_spec() {
  if (spec_ != NULL) spec_->::chaos_data::SymbolStaticEx_SpecMessage::Clear();
  clear_has_spec();
}
inline const ::chaos_data::SymbolStaticEx_SpecMessage& SymbolStaticEx::spec() const {
  const ::chaos_data::SymbolStaticEx_SpecMessage* p = spec_;
  // @@protoc_insertion_point(field_get:chaos_data.SymbolStaticEx.spec)
  return p != NULL ? *p : *reinterpret_cast<const ::chaos_data::SymbolStaticEx_SpecMessage*>(
      &::chaos_data::_SymbolStaticEx_SpecMessage_default_instance_);
}
inline ::chaos_data::SymbolStaticEx_SpecMessage* SymbolStaticEx::mutable_spec() {
  set_has_spec();
  if (spec_ == NULL) {
    spec_ = new ::chaos_data::SymbolStaticEx_SpecMessage;
  }
  // @@protoc_insertion_point(field_mutable:chaos_data.SymbolStaticEx.spec)
  return spec_;
}
inline ::chaos_data::SymbolStaticEx_SpecMessage* SymbolStaticEx::release_spec() {
  // @@protoc_insertion_point(field_release:chaos_data.SymbolStaticEx.spec)
  clear_has_spec();
  ::chaos_data::SymbolStaticEx_SpecMessage* temp = spec_;
  spec_ = NULL;
  return temp;
}
inline void SymbolStaticEx::set_allocated_spec(::chaos_data::SymbolStaticEx_SpecMessage* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    set_has_spec();
  } else {
    clear_has_spec();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos_data.SymbolStaticEx.spec)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace chaos_data

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE>() {
  return ::chaos_data::SymbolStaticEx_SYMBOL_SUBTYPE_descriptor();
}
template <> struct is_proto_enum< ::chaos_data::SymbolStaticEx_SYMBOL_SP> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::chaos_data::SymbolStaticEx_SYMBOL_SP>() {
  return ::chaos_data::SymbolStaticEx_SYMBOL_SP_descriptor();
}
template <> struct is_proto_enum< ::chaos_data::SymbolStaticEx_SYMBOL_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::chaos_data::SymbolStaticEx_SYMBOL_TYPE>() {
  return ::chaos_data::SymbolStaticEx_SYMBOL_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_symbol_5fstaticex_2eproto__INCLUDED
